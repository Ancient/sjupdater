<controls:MetroWindow
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:local="clr-namespace:SjUpdater"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:viewModel="clr-namespace:SjUpdater.ViewModel"
                      xmlns:utils="clr-namespace:SjUpdater.Utils"
                      xmlns:tb="http://www.hardcodet.net/taskbar"
                      xmlns:model="clr-namespace:SjUpdater.Model"
                      xmlns:metro="clr-namespace:MahApps.Metro;assembly=MahApps.Metro"
                      x:Class="SjUpdater.MainWindow"
                      Title="Serienjunkies Updater" Height="784.65" Width="1096" x:Name="Window" SaveWindowPosition="True" MinWidth="800" MinHeight="600"
                      Closing="MainWindow_OnClosing" AllowsTransparency="True" WindowStyle="None" Icon="icon3.ico" TextOptions.TextFormattingMode="Display" >
    <controls:MetroWindow.WindowCommands>
        <controls:WindowCommands>
            <Button Command="{Binding SettingsCommand, ElementName=Window}" >
                <Rectangle Width="20" Height="20"
                   Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill"
                         Visual="{StaticResource appbar_settings}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
        </controls:WindowCommands>
    </controls:MetroWindow.WindowCommands>
    <controls:MetroWindow.Resources>
        <utils:StringToFaviconConverter x:Key="StringToFaviconConverter" />
    </controls:MetroWindow.Resources>
    <controls:MetroWindow.Flyouts>
        <controls:FlyoutsControl>
            <controls:Flyout Header="Add TV Show" Position="Right" x:Name="AddShowFlyout" Theme="Adapt">
                <Grid Margin="25" Width="250">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" MaxWidth="210" controls:TextboxHelper.ClearTextButton="True"
                             controls:TextboxHelper.Watermark="Type Showname" x:Name="TextBoxAutoComl"
                             TextChanged="SearchTextBox_TextChanged" PreviewKeyUp="TextBoxAutoComl_PreviewKeyUp" />

                        <Button Grid.Column="1" Width="Auto" Height="Auto" Content="Add" VerticalAlignment="Center" Margin="10,0,10,0" Style="{DynamicResource MetroFlatButton}" Click="AddSelectedShowButton_Click" >
                            <Button.ToolTip>
                                <TextBlock>
                                        Add selected show
                                        <LineBreak />
                                        <LineBreak />
                                        you can also doubleclick on a show
                                        <LineBreak/>
                                        or use Enter to add the first show
                                </TextBlock>
                            </Button.ToolTip>
                        </Button>
                    </Grid>

                    <ListView Grid.Row="1" Margin="0,-1,0,0" x:Name="ListViewAutoCompl" DisplayMemberPath="Key"
                              MouseDoubleClick="ListViewAutoCompl_MouseDoubleClick" Foreground="{x:Null}"
                              Background="{x:Null}" BorderBrush="{x:Null}" />
                </Grid>
            </controls:Flyout>
            <controls:Flyout Header="Filter" Position="Left" x:Name="FilterFlyout"
                             IsOpenChanged="FilterFlyout_OnIsOpenChanged" Theme="Adapt">
                <Grid Margin="25" Width="250">
                    <StackPanel Orientation="Vertical">
                        <Label Content="Regex Name:"/>
                        <TextBox controls:TextboxHelper.Watermark="e.g. .*-TVS$"
                                 controls:TextboxHelper.ClearTextButton="True">
                            <Binding Path="FilterName" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Content="Regex Format:"/>
                        <TextBox controls:TextboxHelper.Watermark="e.g. (1080|720)(p|i)"
                                 controls:TextboxHelper.ClearTextButton="True">
                            <Binding Path="FilterFormat" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Content="Regex Uploader:"/>
                        <TextBox controls:TextboxHelper.Watermark="Regex or leave Empty"
                                 controls:TextboxHelper.ClearTextButton="True">
                            <Binding Path="FilterUploader" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Content="Regex Size:"/>
                        <TextBox controls:TextboxHelper.Watermark="Regex or leave Empty"
                                 controls:TextboxHelper.ClearTextButton="True">
                            <Binding Path="FilterSize" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Content="Regex Runtime:"/>
                        <TextBox controls:TextboxHelper.Watermark="Regex or leave Empty"
                                 controls:TextboxHelper.ClearTextButton="True">
                            <Binding Path="FilterRuntime" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Content="Regex Hoster:"/>
                        <TextBox controls:TextboxHelper.Watermark="e.g. share-online|uploaded"
                                 controls:TextboxHelper.ClearTextButton="True">
                            <Binding Path="FilterHoster" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Content="Language:"/>
                        <ComboBox ItemsSource="{Binding Source={x:Static model:UploadData.LanguagesValues}}" 
                                  SelectedItem="{Binding FilterLanguage}" />
                    </StackPanel>
                </Grid>
            </controls:Flyout>
        </controls:FlyoutsControl>
    </controls:MetroWindow.Flyouts>
    <controls:MetroWindow.CommandBindings>
        <CommandBinding Command="BrowseBack" Executed="NavBack"/>
    </controls:MetroWindow.CommandBindings>
    <TabControl x:Name="MainTabControl">
        <TabControl.Template>
            <ControlTemplate TargetType="TabControl">
                <ContentPresenter Content="{TemplateBinding SelectedContent}"/>
            </ControlTemplate>
        </TabControl.Template>
        <TabItem Header="Overview">
            <Grid x:Name="OverviewGrid">
                <tb:TaskbarIcon x:Name="NotifyIcon" DataContext="{Binding ElementName=Window}" IconSource="icon3.ico" ToolTipText="SjUpdater" DoubleClickCommand="{Binding IconClickedCommand, ElementName=Window}" >
                    <tb:TaskbarIcon.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Open" Command="{Binding IconClickedCommand}" FontWeight="Bold"/>
                            <MenuItem Header="Exit" Command="{Binding TerminateCommand}"/>
                        </ContextMenu>
                    </tb:TaskbarIcon.ContextMenu>
                </tb:TaskbarIcon>
                <controls:Panorama x:Name="ShowsPanorama" UseSnapBackScrolling="False" Margin="10,10,10,10"
                               VerticalAlignment="Stretch" ItemBox="200">

                    <controls:Panorama.Resources>
                        <DataTemplate DataType="{x:Type viewModel:ShowTileViewModel}">
                            <controls:Tile Width="240" Height="120" x:Name="tile" Title="{Binding Title}"
                                       Command="{Binding ShowClickedCommand, ElementName=Window}"
                                       CommandParameter="{Binding ShowViewModel}" Background="{DynamicResource ControlBackgroundBrush}">
                                <Grid>
                                    <Image Source="{Binding Background.ImageSource}" Visibility="{Binding BackgroundImageVisibility}" Stretch="UniformToFill" Opacity="0.9" />
                                    <Rectangle Fill="{DynamicResource AccentColorBrush3}" Visibility="{Binding BackgroundRectangleVisibility}">
                                        <Rectangle.Effect>
                                            <BlurEffect Radius="2"/>
                                        </Rectangle.Effect>
                                    </Rectangle>
                                   
                                    <controls:ProgressRing Margin="25,0,25,0" Visibility="{Binding IsLoadingVisible}" Foreground="White" />

                                    <StackPanel Grid.Column="0" Grid.Row="0" Margin="5,5,0,0" VerticalAlignment="Top"
                                            HorizontalAlignment="Stretch">
                                        <Label
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Foreground="White" FontWeight="Bold" Content="{Binding Title}" >
                                            <Label.Effect>
                                                <DropShadowEffect RenderingBias="Quality" ShadowDepth="0"
                                                                  BlurRadius="10" />
                                            </Label.Effect>
                                        </Label>
                                        <Grid HorizontalAlignment="Stretch">
                                            <Label
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Foreground="White" Content="{Binding NumberText}">
                                                <Label.Effect>
                                                    <DropShadowEffect RenderingBias="Quality" ShadowDepth="0"
                                                                  BlurRadius="10" />
                                                </Label.Effect>
                                            </Label>
                                            <Label
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Center"
                                            Foreground="Lime" FontWeight="Bold" Content="+New!"
                                            Visibility="{Binding NewEpisodesVisible}">
                                                <Label.Effect>
                                                    <DropShadowEffect RenderingBias="Quality" ShadowDepth="0"
                                                                  BlurRadius="10" />
                                                </Label.Effect>
                                            </Label>
                                        </Grid>
                                    </StackPanel>
                                </Grid>

                            </controls:Tile>
                        </DataTemplate>
                        <Style TargetType="{x:Type controls:Tile}">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type controls:Tile}">
                                        <Grid Background="{TemplateBinding Background}">
                                            <ContentPresenter RecognizesAccessKey="True" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="RenderTransform">
                                                    <Setter.Value>
                                                        <ScaleTransform ScaleX="0.98"
                                                                    ScaleY="0.98"
                                                                    CenterX="0.5"
                                                                    CenterY="0.5" />
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </controls:Panorama.Resources>
                </controls:Panorama>
                <Button Width="40" Click="AddShow"  ToolTip="Add Show" HorizontalAlignment="Right" VerticalAlignment="Top"
                        Height="40" Margin="0,10,90,0"
                        Style="{DynamicResource MetroCircleButtonStyle}">
                    <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="17" Height="17">
                        <Rectangle.OpacityMask>
                            <VisualBrush Visual="{StaticResource appbar_add}" Stretch="Uniform" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>
                <Button Width="40" Click="OpenHomepage"  ToolTip="Open serienjunkies.org" HorizontalAlignment="Right" VerticalAlignment="Top"
                        Height="40" Margin="0,10,50,0"
                        Style="{DynamicResource MetroCircleButtonStyle}">
                    <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="17" Height="17">
                        <Rectangle.OpacityMask>
                            <VisualBrush Visual="{StaticResource appbar_browser}" Stretch="Uniform" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>

                <Button Width="40" Click="ReloadAll"  ToolTip="Recheck all" HorizontalAlignment="Right" VerticalAlignment="Top"
                        Height="40" Margin="0,10,10,0"
                        Style="{DynamicResource MetroCircleButtonStyle}">
                    <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="17" Height="17">
                        <Rectangle.OpacityMask>
                            <VisualBrush Visual="{StaticResource appbar_refresh}" Stretch="Uniform" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>

            </Grid>
        </TabItem>
        <TabItem Header="ShowGrid">
            <Grid x:Name="ShowGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.6*" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="0.4*" MaxWidth="600" MinWidth="270"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid Grid.ColumnSpan="2"  HorizontalAlignment="Stretch" Background="Transparent" PreviewMouseLeftButtonUp="OutsideTreeview_OnMouseLeftButtonUp" >
                    <StackPanel  Margin="10,10,0,0" Orientation="Horizontal">
                        <Button Width="40" VerticalAlignment="Center" Click="EpisodesBack"
                            Height="40"
                            Style="{DynamicResource MetroCircleButtonStyle}">
                            <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="20" Height="20">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Visual="{StaticResource appbar_arrow_left}" Stretch="Uniform" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                        <Label FontFamily="Segoe UI Symbol" FontSize="24" Foreground="{DynamicResource LabelTextBrush}" Content="{Binding Title}"
                           VerticalAlignment="Center" x:Name="SeasonLabel" />
                        <Button Width="40" VerticalAlignment="Center" Click="ShowFilter" ToolTip="Open Filter"
                            Height="40"
                            Style="{DynamicResource MetroCircleButtonStyle}">
                            <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="17" Height="17">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Visual="{StaticResource appbar_filter}" Stretch="Uniform" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                        <Button Width="40" VerticalAlignment="Center" Click="CleanShow" ToolTip="Remove Downloads which were removed"
                            Height="40"
                            Style="{DynamicResource MetroCircleButtonStyle}">
                            <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="17" Height="17">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Visual="{StaticResource appbar_clean}" Stretch="Uniform" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                        <Button Width="40" VerticalAlignment="Center" Click="ShowGotoPage" ToolTip="Open on serienjunkies.org"
                            Height="40"
                            Style="{DynamicResource MetroCircleButtonStyle}">
                            <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="17" Height="17">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Visual="{StaticResource appbar_browser}" Stretch="Uniform" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                        <Button Width="40" VerticalAlignment="Center" ToolTip="Mark all..." Click="MarkAllContextMenuButtonClicked"  ContextMenuService.IsEnabled="false"
                            Height="40"
                            Style="{DynamicResource MetroCircleButtonStyle}">
                            <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="17" Height="17">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Visual="{StaticResource appbar_checkmark_pencil}" Stretch="Uniform" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <Button.ContextMenu>
                                <ContextMenu Placement="RelativePoint" VerticalOffset="32" HorizontalOffset="32" DataContext="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                    <MenuItem Header ="Mark all as Watched" Command="{Binding MarkAllWatchedCommand}" />
                                    <MenuItem Header ="Mark all as Downloaded" Command="{Binding MarkAllDownloadedCommand}" />
                                    <MenuItem Header ="Unmark all" Command="{Binding UnmarkAllCommand}"/>
                                </ContextMenu>
                            </Button.ContextMenu>
                        </Button>
                        <Button Width="40" VerticalAlignment="Center" Click="ShowDelete" ToolTip="Remove this Show"
                            Height="40"
                            Style="{DynamicResource MetroCircleButtonStyle}">
                            <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="17" Height="17">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Visual="{StaticResource appbar_delete}" Stretch="Uniform" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                    </StackPanel>
                </Grid>

                <TreeView Grid.Row="1" Grid.Column="0" Grid.IsSharedSizeScope="True" utils:TreeViewExtensions.EnableMultiSelect="true" ItemsSource="{Binding Seasons}" x:Name="ShowTreeView">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MetroTreeViewItem}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="IsExpanded" Value="True"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                        <StackPanel>
                                            <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                MinHeight="{TemplateBinding MinHeight}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                <Grid Margin="{Binding Converter={StaticResource LengthConverter}, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                  VerticalAlignment="Stretch">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="19" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <ToggleButton x:Name="Expander"
                                              Style="{StaticResource ExpandCollapseToggleStyle}"
                                              IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}"
                                              ClickMode="Press" />

                                                    <ContentPresenter x:Name="PART_Header"
                                                  Grid.Column="1"
                                                  ContentSource="Header"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                </Grid>
                                            </Border>
                                            <ItemsPresenter x:Name="ItemsHost">
                                                <ItemsPresenter.LayoutTransform>
                                                    <ScaleTransform ScaleY="1" />
                                                </ItemsPresenter.LayoutTransform>
                                            </ItemsPresenter>
                                        </StackPanel>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsExpanded"
                                 Value="False">
                                                <Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Collapsed" />
                                            </Trigger>

                                            <Trigger Property="HasItems"
                                 Value="False">
                                                <Setter TargetName="Expander"
                                    Property="Visibility"
                                    Value="Hidden" />
                                            </Trigger>

                                            <Trigger SourceName="Border"
                                 Property="IsMouseOver"
                                 Value="True">
                                                <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush3}" />
                                                <Setter Property="Foreground"
                                    Value="{DynamicResource BlackColorBrush}" />
                                            </Trigger>
                                            <Trigger Property="utils:TreeViewExtensions.IsSelected"
                                 Value="True">
                                                <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Foreground"
                                    Value="{DynamicResource AccentSelectedColorBrush}" />
                                            </Trigger>
                                            <Trigger Property="utils:TreeViewExtensions.IsSelected"
                                 Value="{x:Null}">
                                                <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush4}" />
                                                <Setter Property="Foreground"
                                    Value="{DynamicResource AccentSelectedColorBrush}" />
                                            </Trigger>
                                            <Trigger Property="IsEnabled"
                                 Value="False">
                                                <Setter Property="Foreground"
                                    Value="{DynamicResource GrayBrush7}" />
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsEnabled"
                                           Value="False" />
                                                    <Condition Property="utils:TreeViewExtensions.IsSelected"
                                           Value="True" />
                                                </MultiTrigger.Conditions>
                                                <MultiTrigger.Setters>
                                                    <Setter TargetName="Border"
                                        Property="Background"
                                        Value="{DynamicResource GrayBrush7}" />
                                                    <Setter Property="Foreground"
                                        Value="{DynamicResource AccentSelectedColorBrush}" />
                                                </MultiTrigger.Setters>
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="utils:TreeViewExtensions.IsSelected"
                                           Value="True" />
                                                    <Condition Property="Selector.IsSelectionActive"
                                           Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush2}" />
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.Resources>
                        <HierarchicalDataTemplate DataType="{x:Type viewModel:SeasonViewModel}" ItemsSource="{Binding Episodes}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Label FontSize="18" Content="{Binding Name}" />
                                <Label Grid.Column="1" Content="{Binding EpisodeCount}" Margin="10,0" VerticalAlignment="Center"/>
                            </Grid>
                        </HierarchicalDataTemplate>

                        <DataTemplate DataType="{x:Type viewModel:EpisodeViewModel}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="a"/>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="b"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="c"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="d" />
                                </Grid.ColumnDefinitions>
                                <Label Content="{Binding Number}" Grid.Column="0" Margin="-20,0,0,0" Foreground="{DynamicResource DisabledMenuItemForeground}" />
                                <Label Content="{Binding Title}" Grid.Column="1" />
                                
                                <StackPanel Grid.Column="2" Orientation="Horizontal">
                                    <Label 
                                            Margin="5,0,0,0"
                                             Content ="New Episode!"
                                            Visibility="{Binding NewEpisodeVisible}"
                                            Foreground="LimeGreen" FontWeight="Bold">
                                    </Label>
                                    <Label
                                            Margin="5,0,0,0"
                                             Content="Update!"
                                            Visibility="{Binding NewUpdateVisible}"
                                            Foreground="LimeGreen" FontWeight="Bold">
                                    </Label>
                                </StackPanel>
                                
                                <Label Content="{Binding Formats}" Grid.Column="3" Foreground="{DynamicResource DisabledMenuItemForeground}"/>
                                <Label Content="{Binding Languages}" Grid.Column="4"  Margin="0,0,10,0" Foreground="{DynamicResource DisabledMenuItemForeground}" />
                                <StackPanel Grid.Column="5" Orientation="Horizontal"  Margin="0,0,10,0">
                                    <Rectangle Width="16" Height="16" Visibility="{Binding DownloadedCheckVisibility}" ToolTip="Downloaded" Fill="{DynamicResource DisabledMenuItemForeground}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Visual="{StaticResource appbar_disk}" Stretch="Fill" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                    <Rectangle Width="26" Height="16"  Visibility="{Binding WatchedCheckVisibility}" ToolTip="Watched" Fill="{DynamicResource DisabledMenuItemForeground}" Margin="5,0,0,0">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Visual="{StaticResource appbar_eye}" Stretch="Fill" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </StackPanel>
                            </Grid>

                        </DataTemplate>

                    </TreeView.Resources>
                </TreeView>

                <GridSplitter Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Width="5" HorizontalAlignment="Stretch" />
                <Border Background="{DynamicResource AccentColorBrush4}" Grid.Column="2" Grid.Row="0" Grid.RowSpan="2">
                    <TabControl x:Name="EpisodeTabControl" SelectedIndex="0">
                        <TabControl.Template>
                            <ControlTemplate TargetType="TabControl">
                                <ContentPresenter Content="{TemplateBinding SelectedContent}"/>
                            </ControlTemplate>
                        </TabControl.Template>
                        <TabItem Header="None">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" /> <!-- image-->
                                    <RowDefinition Height="200" /> <!-- desc -->
                                    <RowDefinition Height="Auto" /> <!--- separator -->
                                    <RowDefinition Height="Auto" /> <!--- button and header-->
                                    <RowDefinition Height="Auto"  MinHeight="200"/> <!--- list-->
                                    <RowDefinition Height="*" /> <!--- rest -->
                                </Grid.RowDefinitions>
                                <Image Source="{Binding Cover.ImageSource}" VerticalAlignment="Top" Stretch="Uniform" />

                                <ScrollViewer Margin="10" Grid.Row="1" VerticalScrollBarVisibility="Visible">
                                    <TextBlock TextWrapping="Wrap" Text="{Binding Description}"/>
                                   
                                </ScrollViewer>
                                <Separator Grid.Row="2" Grid.Column="0" Margin="10,0"/>
                                <Label Grid.Row="3" FontSize="18" Margin="5,0,0,0">Unsortable Downloads</Label>
                                <Button HorizontalAlignment="Right" Grid.Row="3"  Content="Show all" Margin="10,5" Click="NoneShowAllDownloads" x:Name="NoneShowAllDownloadsButton"/>

                                <Popup Grid.Row="3" StaysOpen="False" x:Name="NonePopup" 
                                       PlacementTarget="{Binding ElementName=NoneShowAllDownloadsButton}" Placement="Left" HorizontalOffset="62">
                                    <Border BorderBrush="{DynamicResource LabelTextBrush}" BorderThickness="1" Background="{DynamicResource AccentColorBrush3}" >
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <Label FontSize="18" Margin="10,0,0,0" >Unsortable Downloads</Label>
                                            <Button  Grid.Row="0" Margin="20,1,9,1" Width="22"  Height="22" Style="{DynamicResource MetroWindowButtonStyle}" HorizontalAlignment="Right" Click="NoneCloseAllDownloads">
                                                <Path Data="F1M0,0L2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0z"
                                          SnapsToDevicePixels="True"
                                          Fill="White" HorizontalAlignment="Right"/>
                                            </Button>

                                            <ListView  Grid.Row="1" Margin="10,0,10,10" ItemsSource="{Binding DataContext.NonSeasons, ElementName=ShowGrid}">
                                                <ListView.View>
                                                    <GridView>
                                                        <GridViewColumn Header="Title" DisplayMemberBinding="{Binding Title}" />
                                                        <GridViewColumn Header="Language" DisplayMemberBinding="{Binding Upload.Language}" />
                                                        <GridViewColumn Header="Format" DisplayMemberBinding="{Binding Upload.Format}" />
                                                        <GridViewColumn Header="Runtime" DisplayMemberBinding="{Binding Upload.Runtime}" />
                                                        <GridViewColumn Header="Size" DisplayMemberBinding="{Binding Upload.Size}" />
                                                        <GridViewColumn Header="Uploader" DisplayMemberBinding="{Binding Upload.Uploader}" />
                                                        <GridViewColumn Header="Links (Copy2Clipboard)">
                                                            <GridViewColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <ItemsControl ItemsSource="{Binding Links}">
                                                                        <ItemsControl.ItemsPanel>
                                                                            <ItemsPanelTemplate>
                                                                                <StackPanel Orientation="Horizontal" />
                                                                            </ItemsPanelTemplate>
                                                                        </ItemsControl.ItemsPanel>
                                                                        <ItemsControl.ItemTemplate>
                                                                            <DataTemplate>
                                                                                <Button Margin="4" Padding="4,0" 
                                                        Command="{Binding DataContext.DownloadCommand, ElementName=ShowGrid}" ToolTip="{Binding Key}"
                                                        CommandParameter="{Binding Value}" >
                                                                                    <ContentPresenter Content="{Binding Key,Converter={StaticResource StringToFaviconConverter}}" >
                                                                                        <ContentPresenter.ContentTemplate>
                                                                                            <DataTemplate>
                                                                                                <Image Source="{Binding Image}" Width="16" Height="16"/>
                                                                                            </DataTemplate>
                                                                                        </ContentPresenter.ContentTemplate>
                                                                                    </ContentPresenter>
                                                                                </Button>
                                                                            </DataTemplate>
                                                                        </ItemsControl.ItemTemplate>
                                                                    </ItemsControl>
                                                                </DataTemplate>
                                                            </GridViewColumn.CellTemplate>
                                                        </GridViewColumn>
                                                    </GridView>
                                                </ListView.View>
                                            </ListView>
                                        </Grid>
                                    </Border>
                                </Popup>
                                <ListView Grid.Row="4" Margin="10,0,10,10" ItemsSource="{Binding DataContext.NonSeasons, ElementName=ShowGrid}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                    <ListView.Resources>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </Style>
                                    </ListView.Resources>
                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn Header="Links (Copy2Clipboard)">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <ItemsControl ItemsSource="{Binding Links}">
                                                            <ItemsControl.ItemsPanel>
                                                                <ItemsPanelTemplate>
                                                                    <StackPanel Orientation="Horizontal" />
                                                                </ItemsPanelTemplate>
                                                            </ItemsControl.ItemsPanel>
                                                            <ItemsControl.ItemTemplate>
                                                                <DataTemplate>
                                                                    <Button Margin="4" Padding="4,0" 
                                                        Command="{Binding DataContext.DownloadCommand, ElementName=ShowGrid}" ToolTip="{Binding Key}"
                                                        CommandParameter="{Binding Value}" >
                                                                        <ContentPresenter Content="{Binding Key,Converter={StaticResource StringToFaviconConverter}}" >
                                                                            <ContentPresenter.ContentTemplate>
                                                                                <DataTemplate>
                                                                                    <Image Source="{Binding Image}" Width="16" Height="16"/>
                                                                                </DataTemplate>
                                                                            </ContentPresenter.ContentTemplate>
                                                                        </ContentPresenter>
                                                                    </Button>
                                                                </DataTemplate>
                                                            </ItemsControl.ItemTemplate>
                                                        </ItemsControl>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="Format" DisplayMemberBinding="{Binding Upload.Format}" />
                                            <GridViewColumn Header="Title" >
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" ToolTip="{Binding Title}"/>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                        </GridView>
                                    </ListView.View>
                                </ListView>


                            </Grid>

                        </TabItem>
                        <TabItem Header="Season"  x:Name="EpisodeTabControl_Season">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="0" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" MinHeight="200"/>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Row="0"   FontSize="24" Text="{Binding Name }" Margin="10,5" />

                
                                <!--<Image Grid.Row="1" Margin="10" Grid.Column="0" Source="{Binding Cover.ImageSource}" HorizontalAlignment="Left" VerticalAlignment="Top" Stretch="Uniform" />-->

                                <Separator Grid.Row="2" Margin="10,0"/>
                                <Label Grid.Row="3" FontSize="18" Margin="5,0,0,0">Non-Episodes &amp; Packs</Label>
                                <Button HorizontalAlignment="Right" Grid.Row="3"  Content="Show all" Margin="10,5" Click="SeasonShowAllDownloads" x:Name="SeasonShowAllDownloadsButton"/>
                                <Popup Grid.Row="3" StaysOpen="False" x:Name="SeasonPopup" 
                                       PlacementTarget="{Binding ElementName=SeasonShowAllDownloadsButton}" Placement="Left" HorizontalOffset="62">
                                    <Border BorderBrush="{DynamicResource LabelTextBrush}" BorderThickness="1" Background="{DynamicResource AccentColorBrush3}" >
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <Label FontSize="18" Margin="10,0,0,0" >Non-Episodes &amp; Packs</Label>
                                            <Button  Grid.Row="0" Margin="20,1,9,1" Width="22"  Height="22" Style="{DynamicResource MetroWindowButtonStyle}" HorizontalAlignment="Right" Click="SeasonCloseAllDownloads">
                                                <Path Data="F1M0,0L2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0z"
                                          SnapsToDevicePixels="True"
                                          Fill="White" HorizontalAlignment="Right"/>
                                            </Button>

                                            <ListView  Grid.Row="1" Margin="10,0,10,10" ItemsSource="{Binding NonEpisodes}">
                                                <ListView.View>
                                                    <GridView>
                                                        <GridViewColumn Header="Title" DisplayMemberBinding="{Binding Title}" />
                                                        <GridViewColumn Header="Language" DisplayMemberBinding="{Binding Upload.Language}" />
                                                        <GridViewColumn Header="Format" DisplayMemberBinding="{Binding Upload.Format}" />
                                                        <GridViewColumn Header="Runtime" DisplayMemberBinding="{Binding Upload.Runtime}" />
                                                        <GridViewColumn Header="Size" DisplayMemberBinding="{Binding Upload.Size}" />
                                                        <GridViewColumn Header="Uploader" DisplayMemberBinding="{Binding Upload.Uploader}" />
                                                        <GridViewColumn Header="Links (Copy2Clipboard)">
                                                            <GridViewColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <ItemsControl ItemsSource="{Binding Links}">
                                                                        <ItemsControl.ItemsPanel>
                                                                            <ItemsPanelTemplate>
                                                                                <StackPanel Orientation="Horizontal" />
                                                                            </ItemsPanelTemplate>
                                                                        </ItemsControl.ItemsPanel>
                                                                        <ItemsControl.ItemTemplate>
                                                                            <DataTemplate>
                                                                                <Button Margin="4" Padding="4,0" 
                                                        Command="{Binding DataContext.DownloadCommand, ElementName=EpisodeTabControl_Season}" ToolTip="{Binding Key}"
                                                        CommandParameter="{Binding Value}" >
                                                                                    <ContentPresenter Content="{Binding Key,Converter={StaticResource StringToFaviconConverter}}" >
                                                                                        <ContentPresenter.ContentTemplate>
                                                                                            <DataTemplate>
                                                                                                <Image Source="{Binding Image}" Width="16" Height="16"/>
                                                                                            </DataTemplate>
                                                                                        </ContentPresenter.ContentTemplate>
                                                                                    </ContentPresenter>
                                                                                </Button>
                                                                            </DataTemplate>
                                                                        </ItemsControl.ItemTemplate>
                                                                    </ItemsControl>
                                                                </DataTemplate>
                                                            </GridViewColumn.CellTemplate>
                                                        </GridViewColumn>
                                                    </GridView>
                                                </ListView.View>
                                            </ListView>
                                        </Grid>
                                    </Border>
                                </Popup>
                                <ListView Grid.Column="0" Grid.Row="4" Margin="10,0,10,10" ItemsSource="{Binding NonEpisodes}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                    <ListView.Resources>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </Style>
                                    </ListView.Resources>
                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn Header="Links (Copy2Clipboard)">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <ItemsControl ItemsSource="{Binding Links}">
                                                            <ItemsControl.ItemsPanel>
                                                                <ItemsPanelTemplate>
                                                                    <StackPanel Orientation="Horizontal" />
                                                                </ItemsPanelTemplate>
                                                            </ItemsControl.ItemsPanel>
                                                            <ItemsControl.ItemTemplate>
                                                                <DataTemplate>
                                                                    <Button Margin="4" Padding="4,0" 
                                                        Command="{Binding DataContext.DownloadCommand, ElementName=EpisodeTabControl_Season}" ToolTip="{Binding Key}"
                                                        CommandParameter="{Binding Value}" >
                                                                        <ContentPresenter Content="{Binding Key,Converter={StaticResource StringToFaviconConverter}}" >
                                                                            <ContentPresenter.ContentTemplate>
                                                                                <DataTemplate>
                                                                                    <Image Source="{Binding Image}" Width="16" Height="16"/>
                                                                                </DataTemplate>
                                                                            </ContentPresenter.ContentTemplate>
                                                                        </ContentPresenter>
                                                                    </Button>
                                                                </DataTemplate>
                                                            </ItemsControl.ItemTemplate>
                                                        </ItemsControl>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="Format" DisplayMemberBinding="{Binding Upload.Format}" />
                                            <GridViewColumn Header="Title" > 
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" ToolTip="{Binding Title}"/>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                        </GridView>
                                    </ListView.View>
                                </ListView>



                            </Grid>

                        </TabItem>
                        <TabItem Header="Episode" x:Name="EpisodeTabControl_Episode">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" /> <!-- Title /Button -->
                                    <RowDefinition Height="Auto" /> <!-- Image -->
                                    <RowDefinition Height="Auto" /> <!-- More buttons -->
                                    <RowDefinition Height="Auto" /> <!-- Separator -->
                                    <RowDefinition Height="Auto" /> <!-- Title of list -->
                                    <RowDefinition Height="Auto" MinHeight="200"/> <!-- List -->
                                    <RowDefinition Height="*" /> <!-- Rest -->
                                </Grid.RowDefinitions>
                                
                                <Grid Grid.Row ="0" Margin="10,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <TextBlock FontSize="24" Text="{Binding Title }" TextTrimming="CharacterEllipsis" ToolTip="{Binding Title}" VerticalAlignment="Center" />
                                    <Rectangle Grid.Column="1" Width="16" Height="16" Visibility="{Binding DownloadedCheckVisibility}" ToolTip="Downloaded" Fill="{DynamicResource LabelTextBrush}"  Margin="10,0,0,0">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Visual="{StaticResource appbar_disk}" Stretch="Fill" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                    <Rectangle Grid.Column="2" Width="26" Height="16" Visibility="{Binding WatchedCheckVisibility}" ToolTip="Watched" Fill="{DynamicResource LabelTextBrush}" Margin="5,0,0,0">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Visual="{StaticResource appbar_eye}" Stretch="Fill" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Grid>
                                
                               

                                <Image Grid.Row="1"  Margin="10,5" Source="{Binding Photo.ImageSource}" HorizontalAlignment="Stretch" VerticalAlignment="Top" Stretch="Uniform" />


                                <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="2" VerticalAlignment="Top"  Margin="10,5,0,5">
                                    <Button Content="Show Review"  Command="{Binding ReviewCommand}" Margin="0,0,5,0"  />
                                    <Button Content="{Binding ButtonStateChangeText}"  Command="{Binding StateChangeCommand }" />
                                </StackPanel>
                                 
                                <Separator Grid.Row="3" Margin="10,5,10,0"/>
                                <Label Grid.Row="4" FontSize="18" Margin="5,0,0,0">Favorized Uploads</Label>
                                <Button HorizontalAlignment="Right" Grid.Row="4" Grid.Column="0" Content="Show all" Margin="10,5" Click="EpisodeShowAllDownloads" x:Name="EpisodeShowAllDownloadsButton"/>
                                <Popup Grid.Row="4" StaysOpen="False" x:Name="EpisodePopup" 
                                       PlacementTarget="{Binding ElementName=EpisodeShowAllDownloadsButton}" Placement="Left" HorizontalOffset="62">
                                    <Border BorderBrush="{DynamicResource LabelTextBrush}" BorderThickness="1" Background="{DynamicResource AccentColorBrush3}" >
                                            <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                            <Label FontSize="18" Margin="10,0,0,0" >All Uploads</Label>
                                            <Button  Grid.Row="0" Margin="20,1,9,1" Width="22"  Height="22" Style="{DynamicResource MetroWindowButtonStyle}" HorizontalAlignment="Right" Click="EpisodeCloseAllDownloads">
                                                <Path Data="F1M0,0L2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0z"
                                          SnapsToDevicePixels="True"
                                          Fill="White" HorizontalAlignment="Right"/>
                                            </Button>
     
                                        <ListView  Grid.Row="1" Margin="10,0,10,10" ItemsSource="{Binding Downloads}">
                                            <ListView.View>
                                                <GridView>
                                                    <GridViewColumn Header="Fav" Width="30" >
                                                        <GridViewColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <CheckBox  ToolTip="Favorite/Unfavorite this Release" IsChecked="{Binding Upload.Favorized}">
                                                                    <CheckBox.Style>
                                                                        <Style TargetType="CheckBox">
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type CheckBox}">
                                                                                        <StackPanel Orientation="Horizontal">
                                                                                            <Rectangle  x:Name="rect" Fill="{DynamicResource LabelTextBrush}" Width="17" Height="17" Opacity="0.2">
                                                                                                <Rectangle.Style>
                                                                                                    <Style TargetType="Rectangle">
                                                                                                        <Style.Triggers>
                                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                                <Setter Property="OpacityMask">
                                                                                                                    <Setter.Value>
                                                                                                                        <VisualBrush Visual="{StaticResource appbar_star_invincible}" Stretch="Uniform" />
                                                                                                                    </Setter.Value>
                                                                                                                </Setter>
                                                                                                            </Trigger>
                                                                                                        </Style.Triggers>
                                                                                                        <Setter Property="OpacityMask">
                                                                                                            <Setter.Value>
                                                                                                                <VisualBrush Visual="{StaticResource appbar_star}" Stretch="Uniform" />
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                    </Style>
                                                                                                </Rectangle.Style>
                                                                                            </Rectangle>
                                                                                            <ContentPresenter VerticalAlignment="Center" Margin="10,0,0,0" />
                                                                                        </StackPanel>

                                                                                        <ControlTemplate.Triggers>
                                                                                            <Trigger Property="IsChecked" Value="true">
                                                                                                <Setter TargetName="rect" Property="Opacity" Value="1" />
                                                                                            </Trigger>
                                                                                        </ControlTemplate.Triggers>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </CheckBox.Style>
                                                                </CheckBox>
                                                            </DataTemplate>
                                                        </GridViewColumn.CellTemplate>
                                                    </GridViewColumn>
                                                    <GridViewColumn Header="Title" DisplayMemberBinding="{Binding Title}" />
                                                    <GridViewColumn Header="Language" DisplayMemberBinding="{Binding Upload.Language}" />
                                                    <GridViewColumn Header="Format" DisplayMemberBinding="{Binding Upload.Format}" />
                                                    <GridViewColumn Header="Runtime" DisplayMemberBinding="{Binding Upload.Runtime}" />
                                                    <GridViewColumn Header="Size" DisplayMemberBinding="{Binding Upload.Size}" />
                                                    <GridViewColumn Header="Uploader" DisplayMemberBinding="{Binding Upload.Uploader}" />
                                                    <GridViewColumn Header="Links (Copy2Clipboard)">
                                                        <GridViewColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <ItemsControl ItemsSource="{Binding Links}">
                                                                    <ItemsControl.ItemsPanel>
                                                                        <ItemsPanelTemplate>
                                                                            <StackPanel Orientation="Horizontal" />
                                                                        </ItemsPanelTemplate>
                                                                    </ItemsControl.ItemsPanel>
                                                                    <ItemsControl.ItemTemplate>
                                                                        <DataTemplate>
                                                                            <Button Margin="4" Padding="4,0" 
                                                        Command="{Binding DataContext.DownloadCommand, ElementName=EpisodeTabControl_Episode}" ToolTip="{Binding Key}"
                                                        CommandParameter="{Binding Value}" >
                                                                                <ContentPresenter Content="{Binding Key,Converter={StaticResource StringToFaviconConverter}}" >
                                                                                    <ContentPresenter.ContentTemplate>
                                                                                        <DataTemplate>
                                                                                            <Image Source="{Binding Image}" Width="16" Height="16"/>
                                                                                        </DataTemplate>
                                                                                    </ContentPresenter.ContentTemplate>
                                                                                </ContentPresenter>
                                                                            </Button>
                                                                        </DataTemplate>
                                                                    </ItemsControl.ItemTemplate>
                                                                </ItemsControl>
                                                            </DataTemplate>
                                                        </GridViewColumn.CellTemplate>
                                                    </GridViewColumn>
                                                </GridView>
                                            </ListView.View>
                                        </ListView>
                                    </Grid>
                                    </Border> 
                                </Popup>

                                <ListView  Grid.Row="5" Margin="10,0,10,10" ItemsSource="{Binding FavorizedUploads}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                    <ListView.Resources>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </Style>
                                    </ListView.Resources>
                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn Header="Links (Copy2Clipboard)">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <ItemsControl ItemsSource="{Binding Links}">
                                                            <ItemsControl.ItemsPanel>
                                                                <ItemsPanelTemplate>
                                                                    <StackPanel Orientation="Horizontal" />
                                                                </ItemsPanelTemplate>
                                                            </ItemsControl.ItemsPanel>
                                                            <ItemsControl.ItemTemplate>
                                                                <DataTemplate>
                                                                    <Button Margin="4" Padding="4,0" 
                                                        Command="{Binding DataContext.DownloadCommand, ElementName=EpisodeTabControl_Episode}" ToolTip="{Binding Key}"
                                                        CommandParameter="{Binding Value}" >
                                                                        <ContentPresenter Content="{Binding Key,Converter={StaticResource StringToFaviconConverter}}" >
                                                                            <ContentPresenter.ContentTemplate>
                                                                                <DataTemplate>
                                                                                    <Image Source="{Binding Image}" Width="16" Height="16"/>
                                                                                </DataTemplate>
                                                                            </ContentPresenter.ContentTemplate>
                                                                        </ContentPresenter>
                                                                    </Button>
                                                                </DataTemplate>
                                                            </ItemsControl.ItemTemplate>
                                                        </ItemsControl>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="Format" DisplayMemberBinding="{Binding Upload.Format}" />
                                            <GridViewColumn Header="Uploader" DisplayMemberBinding="{Binding Upload.Uploader}" />
                                            <GridViewColumn Header="Size" DisplayMemberBinding="{Binding Upload.Size}" />
                                        </GridView>
                                    </ListView.View>
                                </ListView>
                            </Grid>


                        </TabItem>
                        <TabItem Header="Multi"  x:Name="EpisodeTabControl_Multi">
                            <Grid>
                                <Label FontSize="24">Multi</Label>
                                
                            </Grid>
                        </TabItem>
                    </TabControl>

                </Border>
            </Grid>
        </TabItem>
        <TabItem Header="SettingsGrid">
            <Grid x:Name="SettingsGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal" Margin="10,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Button Width="40" VerticalAlignment="Center"
                        Command="{Binding SettingsCommand, ElementName=Window}"
                        Height="40"
                        Style="{DynamicResource MetroCircleButtonStyle}">
                        <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="20" Height="20">
                            <Rectangle.OpacityMask>
                                <VisualBrush Visual="{StaticResource appbar_arrow_left}" Stretch="Uniform" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button>
                    <Label FontFamily="Segoe UI Symbol" FontSize="24" Foreground="{DynamicResource LabelTextBrush}" Content="Settings"
                       VerticalAlignment="Center" />
                </StackPanel>

                <StackPanel Margin="0,15,10,0" HorizontalAlignment="Right" Grid.Row="0" Orientation="Horizontal">
                    <Label VerticalAlignment="Center" Content="You might have to restart the program for the changes to take effect."/>
                    <Button Width="40" ToolTip="Restart Application" HorizontalAlignment="Center" VerticalAlignment="Center"
                        Height="40"
                        Style="{DynamicResource MetroCircleButtonStyle}" Click="restartButton_Click">
                        <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="17" Height="17">
                            <Rectangle.OpacityMask>
                                <VisualBrush Visual="{StaticResource appbar_debug_restart}" Stretch="Uniform" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button>
                </StackPanel>

                <GroupBox Header="Apperance" Grid.Row="1" Margin="10,10,10,10">
                    <StackPanel>
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition MaxWidth="500" Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition MaxWidth="500" Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Label Content="Theme:"/>
                            <ComboBox Grid.Column="1"
                                  ItemsSource="{Binding Source={x:Static metro:ThemeManager.AppThemes}}"
                                  DisplayMemberPath="Name" SelectedValuePath="Name"
                                  SelectedValue="{Binding CurrentTheme, ElementName=Window}" />
                            <Label Content="Accent:" Grid.Column="2"/>
                            <ComboBox Grid.Column="3"
                                  ItemsSource="{Binding Source={x:Static metro:ThemeManager.DefaultAccents}}"
                                  DisplayMemberPath="Name" SelectedValuePath="Name"
                                  SelectedValue="{Binding CurrentAccent, ElementName=Window}" />
                        </Grid>

                        <CheckBox Content="Sort Tv Shows Alphabetically" Margin="0,2"
                              IsChecked="{Binding SortShowsAlphabetically, Source={x:Static local:Settings.Instance}}" />
                        <CheckBox Content="Sort Seasons Descending"  Margin="0,2"
                              IsChecked="{Binding SortSeasonsDesc, Source={x:Static local:Settings.Instance}}" />
                        <CheckBox Content="Sort Episodes Descending"  Margin="0,2"
                              IsChecked="{Binding SortEpisodesDesc, Source={x:Static local:Settings.Instance}}" />
                        <CheckBox Content="Mark 'German Subbed' Episodes as German"  Margin="0,2,0,1"
                              IsChecked="{Binding MarkSubbedAsGerman, Source={x:Static local:Settings.Instance}}" />
                        
                        <StackPanel Orientation="Horizontal">
                            <CheckBox Content="Show Notifications" IsChecked="{Binding ShowNotifications, Source={x:Static local:Settings.Instance}}"/>
                            <Label VerticalContentAlignment="Center" Content="Timeout for popup:" Margin="20,0,0,0"/>
                            <ComboBox Width="100" ItemsSource="{Binding Source={x:Static local:MainWindow.DictNotifyTimeouts}}"
                                  DisplayMemberPath="Key" SelectedValuePath="Value"
                                  SelectedValue="{Binding NotificationTimeout, Source={x:Static local:Settings.Instance}}"/>
                        </StackPanel>
                        
                        <CheckBox Content="Enable Images" IsChecked="{Binding EnableImages, Source={x:Static local:Settings.Instance}}"/>
                       
                    </StackPanel>
                </GroupBox>
                <GroupBox Header="Other" Grid.Row="3" Margin="10,10,10,10">
                    <StackPanel>
                        <CheckBox Content="Only Minimize to Tray when closing"
        				IsChecked="{Binding MinimizeToTray, Source={x:Static local:Settings.Instance}}" />
                        <Grid Width="500" HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Label Content="Number of working Threads:"/>
                            <Slider Minimum="1" Maximum="12" x:Name="threadSlider" Grid.Column="1" SmallChange="1"
        					IsSnapToTickEnabled="True"
        					Value="{Binding NumFetchThreads, Source={x:Static local:Settings.Instance}}" />
                            <Label Content="{Binding Value, ElementName=threadSlider}" Grid.Column="2" />
                        </Grid>
                        <Grid Width="500" HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            
                            <Label Content="Update Shows Automatically:"/>
                            <ComboBox Grid.Column="1" Grid.Row="0" ItemsSource="{Binding Source={x:Static local:MainWindow.DictUpdateTimes}}"
                                  DisplayMemberPath="Key" SelectedValuePath="Value"
                                  SelectedValue="{Binding UpdateTime, Source={x:Static local:Settings.Instance}}"/>

                        </Grid>
                        <CheckBox Content="Don't send any personal data (your favorite tv shows) to stats server"
        				IsChecked="{Binding NoPersonalData, Source={x:Static local:Settings.Instance}}" />
                        <Separator Margin="0,10,0,5"/>
                        <StackPanel Orientation="Horizontal">
                            <Label>Current Version:</Label>
                            <Label Content="{Binding ElementName=Window,Path=CurrentVersionString}" Margin="10,0"/>
                            <Button Click="ChangeLogButtonClicked">Changelog / Updates</Button>
                            <CheckBox Margin="20,0,0,0" Content="Autocheck at start and every 30 minutes" IsChecked="{Binding CheckForUpdates, Source={x:Static local:Settings.Instance}}"/>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
                <GroupBox Grid.Row="2" Margin="10,10,10,10" Header="Default Filter">
                    <Grid DataContext="{Binding Source={x:Static local:Settings.Instance}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50*" />
                            <ColumnDefinition Width="50" />
                            <ColumnDefinition Width="50*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="Regex Name:"/>
                        <TextBox Grid.Row="1" Grid.Column="0" controls:TextboxHelper.Watermark="e.g. .*-TVS$"
                             controls:TextboxHelper.ClearTextButton="True">
                            <Binding Path="FilterName" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Grid.Row="2" Grid.Column="0" Content="Regex Format:"/>
                        <TextBox Grid.Row="3" Grid.Column="0" controls:TextboxHelper.Watermark="e.g. (1080|720)(p|i)"
                             controls:TextboxHelper.ClearTextButton="True">
                            <Binding Path="FilterFormat" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Grid.Row="4" Grid.Column="0" Content="Regex Uploader:"/>
                        <TextBox Grid.Row="5" Grid.Column="0" controls:TextboxHelper.Watermark="Regex or leave Empty"
                             controls:TextboxHelper.ClearTextButton="True">
                            <Binding Path="FilterUploader" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>

                        <Label  Grid.Row="0" Grid.Column="2" Content="Regex Size:"/>
                        <TextBox Grid.Row="1" Grid.Column="2" controls:TextboxHelper.Watermark="Regex or leave Empty"
                             controls:TextboxHelper.ClearTextButton="True">
                            <Binding Path="FilterSize" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Grid.Row="2" Grid.Column="2" Content="Regex Runtime:"/>
                        <TextBox Grid.Row="3" Grid.Column="2" controls:TextboxHelper.Watermark="Regex or leave Empty"
                             controls:TextboxHelper.ClearTextButton="True">
                            <Binding Path="FilterRuntime" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Grid.Row="4" Grid.Column="2" Content="Regex Hoster:"/>
                        <TextBox Grid.Row="5" Grid.Column="2" controls:TextboxHelper.Watermark="e.g. share-online|uploaded"
                             controls:TextboxHelper.ClearTextButton="True">
                            <Binding Path="FilterHoster" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Grid.Row="6" Grid.Column="2" Content="Language:"/>
                        <ComboBox Grid.Row="7" Grid.Column="2" 
                                  ItemsSource="{Binding Source={x:Static model:UploadData.LanguagesValues}}"  
                                  SelectedItem="{Binding FilterLanguage}"/>
                    </Grid>
                </GroupBox>
            </Grid>
        </TabItem>
    </TabControl>
</controls:MetroWindow>