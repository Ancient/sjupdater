<controls:MetroWindow
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:local="clr-namespace:SjUpdater"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:viewModel="clr-namespace:SjUpdater.ViewModel"
                      xmlns:utils="clr-namespace:SjUpdater.Utils"
                      xmlns:tb="http://www.hardcodet.net/taskbar"
                      xmlns:model="clr-namespace:SjUpdater.Model"
                      xmlns:metro="clr-namespace:MahApps.Metro;assembly=MahApps.Metro"
                      x:Class="SjUpdater.MainWindow"
                      Title="Serienjunkies Updater" Height="784.65" Width="1096" x:Name="Window" SaveWindowPosition="True" MinWidth="800" MinHeight="600"
                      Closing="MainWindow_OnClosing" AllowsTransparency="True" WindowStyle="None" Icon="icon3.ico" TextOptions.TextFormattingMode="Display" Loaded="Window_Loaded" >
    <controls:MetroWindow.WindowCommands>
        <controls:WindowCommands>
            <Button Command="{Binding SettingsCommand, ElementName=Window}" >
                <Rectangle Width="20" Height="20"
                   Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill"
                         Visual="{StaticResource appbar_settings}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
        </controls:WindowCommands>
    </controls:MetroWindow.WindowCommands>
    <controls:MetroWindow.Resources>
        <utils:StringToFaviconConverter x:Key="StringToFaviconConverter" />
    </controls:MetroWindow.Resources>
    <controls:MetroWindow.Flyouts>
        <controls:FlyoutsControl>
            <controls:Flyout Header="Add TV Show" Position="Right" x:Name="AddShowFlyout" Theme="Adapt">
                <Grid Margin="25" Width="250">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" MaxWidth="210" controls:TextboxHelper.ClearTextButton="True"
                             controls:TextboxHelper.Watermark="Type Showname" x:Name="TextBoxAutoComl"
                             TextChanged="SearchTextBox_TextChanged" PreviewKeyUp="TextBoxAutoComl_PreviewKeyUp" />

                        <Button Grid.Column="1" Width="Auto" Height="Auto" Content="Add" VerticalAlignment="Center" Margin="10,0,10,0" Style="{DynamicResource MetroFlatButton}" Click="AddSelectedShowButton_Click" >
                            <Button.ToolTip>
                                <TextBlock>
                                        Add selected show
                                        <LineBreak />
                                        <LineBreak />
                                        you can also doubleclick on a show
                                        <LineBreak/>
                                        or use Enter to add the first show
                                </TextBlock>
                            </Button.ToolTip>
                        </Button>
                    </Grid>

                    <ListView Grid.Row="1" Margin="0,-1,0,0" x:Name="ListViewAutoCompl" DisplayMemberPath="Key"
                              MouseDoubleClick="ListViewAutoCompl_MouseDoubleClick" Foreground="{x:Null}"
                              Background="{x:Null}" BorderBrush="{x:Null}" />
                </Grid>
            </controls:Flyout>
            <controls:Flyout Header="Filter" Position="Left" x:Name="FilterFlyout"
                             IsOpenChanged="FilterFlyout_OnIsOpenChanged" Theme="Adapt">
                <Grid Margin="25" Width="250">
                    <StackPanel Orientation="Vertical">
                        <CheckBox Content="Show Non-Season Stuff" IsChecked="{Binding FilterNonSeason}" />
                        <CheckBox Content="Show Non-Episodes" IsChecked="{Binding FilterNonEpisode}" />
                        <Label Content="Regex Name:"/>
                        <TextBox controls:TextboxHelper.Watermark="e.g. .*-TVS$"
                                 controls:TextboxHelper.ClearTextButton="True">
                            <Binding Path="FilterName" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Content="Regex Format:"/>
                        <TextBox controls:TextboxHelper.Watermark="e.g. (1080|720)(p|i)"
                                 controls:TextboxHelper.ClearTextButton="True">
                            <Binding Path="FilterFormat" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Content="Regex Uploader:"/>
                        <TextBox controls:TextboxHelper.Watermark="Regex or leave Empty"
                                 controls:TextboxHelper.ClearTextButton="True">
                            <Binding Path="FilterUploader" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Content="Regex Size:"/>
                        <TextBox controls:TextboxHelper.Watermark="Regex or leave Empty"
                                 controls:TextboxHelper.ClearTextButton="True">
                            <Binding Path="FilterSize" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Content="Regex Runtime:"/>
                        <TextBox controls:TextboxHelper.Watermark="Regex or leave Empty"
                                 controls:TextboxHelper.ClearTextButton="True">
                            <Binding Path="FilterRuntime" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Content="Regex Hoster:"/>
                        <TextBox controls:TextboxHelper.Watermark="e.g. share-online|uploaded"
                                 controls:TextboxHelper.ClearTextButton="True">
                            <Binding Path="FilterHoster" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Content="Language:"/>
                        <ComboBox ItemsSource="{Binding Source={x:Static model:UploadData.LanguagesValues}}" 
                                  SelectedItem="{Binding FilterLanguage}" />
                    </StackPanel>
                </Grid>
            </controls:Flyout>
        </controls:FlyoutsControl>
    </controls:MetroWindow.Flyouts>
    <controls:MetroWindow.CommandBindings>
        <CommandBinding Command="BrowseBack" Executed="NavBack"/>
    </controls:MetroWindow.CommandBindings>
    <TabControl x:Name="TabControl">
        <TabControl.Template>
            <ControlTemplate TargetType="TabControl">
                <ContentPresenter Content="{TemplateBinding SelectedContent}"/>
            </ControlTemplate>
        </TabControl.Template>
        <TabItem Header="Overview">
            <Grid x:Name="OverviewGrid">
                <tb:TaskbarIcon x:Name="NotifyIcon" DataContext="{Binding ElementName=Window}" IconSource="icon3.ico" ToolTipText="SjUpdater" DoubleClickCommand="{Binding IconClickedCommand, ElementName=Window}" >
                    <tb:TaskbarIcon.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Open" Command="{Binding IconClickedCommand}" FontWeight="Bold"/>
                            <MenuItem Header="Exit" Command="{Binding TerminateCommand}"/>
                        </ContextMenu>
                    </tb:TaskbarIcon.ContextMenu>
                </tb:TaskbarIcon>
                <controls:Panorama x:Name="ShowsPanorama" UseSnapBackScrolling="False" Margin="10,10,10,10"
                               VerticalAlignment="Stretch" ItemBox="200">

                    <controls:Panorama.Resources>
                        <DataTemplate DataType="{x:Type viewModel:ShowTileViewModel}">
                            <controls:Tile Width="240" Height="120" x:Name="tile" Title="{Binding Title}"
                                       Command="{Binding ShowClickedCommand, ElementName=Window}"
                                       CommandParameter="{Binding ShowViewModel}" Background="{DynamicResource ControlBackgroundBrush}">
                                <Grid>
                                    <Image Source="{Binding Background.ImageSource}" Visibility="{Binding BackgroundImageVisibility}" Stretch="UniformToFill" Opacity="0.9" />
                                    <Rectangle Fill="{DynamicResource AccentColorBrush3}" Visibility="{Binding BackgroundRectangleVisibility}">
                                        <Rectangle.Effect>
                                            <BlurEffect Radius="2"/>
                                        </Rectangle.Effect>
                                    </Rectangle>
                                   
                                    <controls:ProgressRing Margin="25,0,25,0" Visibility="{Binding IsLoadingVisible}" Foreground="White" />

                                    <StackPanel Grid.Column="0" Grid.Row="0" Margin="5,5,0,0" VerticalAlignment="Top"
                                            HorizontalAlignment="Stretch">
                                        <Label
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Foreground="White" FontWeight="Bold" Content="{Binding Title}" >
                                            <Label.Effect>
                                                <DropShadowEffect RenderingBias="Quality" ShadowDepth="0"
                                                                  BlurRadius="10" />
                                            </Label.Effect>
                                        </Label>
                                        <Grid HorizontalAlignment="Stretch">
                                            <Label
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Foreground="White" Content="{Binding NumberText}">
                                                <Label.Effect>
                                                    <DropShadowEffect RenderingBias="Quality" ShadowDepth="0"
                                                                  BlurRadius="10" />
                                                </Label.Effect>
                                            </Label>
                                            <Label
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Center"
                                            Foreground="Lime" FontWeight="Bold" Content="+New!"
                                            Visibility="{Binding NewEpisodesVisible}">
                                                <Label.Effect>
                                                    <DropShadowEffect RenderingBias="Quality" ShadowDepth="0"
                                                                  BlurRadius="10" />
                                                </Label.Effect>
                                            </Label>
                                        </Grid>
                                    </StackPanel>
                                </Grid>

                            </controls:Tile>
                        </DataTemplate>
                        <Style TargetType="{x:Type controls:Tile}">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type controls:Tile}">
                                        <Grid Background="{TemplateBinding Background}">
                                            <ContentPresenter RecognizesAccessKey="True" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="RenderTransform">
                                                    <Setter.Value>
                                                        <ScaleTransform ScaleX="0.98"
                                                                    ScaleY="0.98"
                                                                    CenterX="0.5"
                                                                    CenterY="0.5" />
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </controls:Panorama.Resources>
                </controls:Panorama>
                <Button Width="40" Click="AddShow"  ToolTip="Add Show" HorizontalAlignment="Right" VerticalAlignment="Top"
                        Height="40" Margin="0,10,90,0"
                        Style="{DynamicResource MetroCircleButtonStyle}">
                    <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="17" Height="17">
                        <Rectangle.OpacityMask>
                            <VisualBrush Visual="{StaticResource appbar_add}" Stretch="Uniform" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>
                <Button Width="40" Click="OpenHomepage"  ToolTip="Open serienjunkies.org" HorizontalAlignment="Right" VerticalAlignment="Top"
                        Height="40" Margin="0,10,50,0"
                        Style="{DynamicResource MetroCircleButtonStyle}">
                    <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="17" Height="17">
                        <Rectangle.OpacityMask>
                            <VisualBrush Visual="{StaticResource appbar_browser}" Stretch="Uniform" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>

                <Button Width="40" Click="ReloadAll"  ToolTip="Recheck all" HorizontalAlignment="Right" VerticalAlignment="Top"
                        Height="40" Margin="0,10,10,0"
                        Style="{DynamicResource MetroCircleButtonStyle}">
                    <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="17" Height="17">
                        <Rectangle.OpacityMask>
                            <VisualBrush Visual="{StaticResource appbar_refresh}" Stretch="Uniform" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>

            </Grid>
        </TabItem>
        <TabItem Header="ShowGrid">
            <Grid x:Name="ShowGrid">
                <StackPanel Orientation="Horizontal" Margin="10,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Button Width="40" VerticalAlignment="Center" Click="EpisodesBack"
                        Height="40"
                        Style="{DynamicResource MetroCircleButtonStyle}">
                        <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="20" Height="20">
                            <Rectangle.OpacityMask>
                                <VisualBrush Visual="{StaticResource appbar_arrow_left}" Stretch="Uniform" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button>
                    <Label FontFamily="Segoe UI Symbol" FontSize="24" Foreground="{DynamicResource LabelTextBrush}" Content="{Binding Title}"
                       VerticalAlignment="Center" x:Name="SeasonLabel" />
                    <Button Width="40" VerticalAlignment="Center" Click="ShowFilter" ToolTip="Open Filter"
                        Height="40"
                        Style="{DynamicResource MetroCircleButtonStyle}">
                        <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="17" Height="17">
                            <Rectangle.OpacityMask>
                                <VisualBrush Visual="{StaticResource appbar_filter}" Stretch="Uniform" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button>
                    <Button Width="40" VerticalAlignment="Center" Click="ShowGotoPage" ToolTip="Open on serienjunkies.org"
                        Height="40"
                        Style="{DynamicResource MetroCircleButtonStyle}">
                        <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="17" Height="17">
                            <Rectangle.OpacityMask>
                                <VisualBrush Visual="{StaticResource appbar_browser}" Stretch="Uniform" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button>
                    <Button Width="40" VerticalAlignment="Center" ToolTip="Mark all..." Click="MarkAllContextMenuButtonClicked"  ContextMenuService.IsEnabled="false"
                        Height="40"
                        Style="{DynamicResource MetroCircleButtonStyle}">
                        <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="17" Height="17">
                            <Rectangle.OpacityMask>
                                <VisualBrush Visual="{StaticResource appbar_checkmark_pencil}" Stretch="Uniform" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <Button.ContextMenu>
                            <ContextMenu Placement="RelativePoint" VerticalOffset="32" HorizontalOffset="32" DataContext="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                <MenuItem Header ="Mark all as Watched" Command="{Binding MarkAllWatchedCommand}" />
                                <MenuItem Header ="Mark all as Downloaded" Command="{Binding MarkAllDownloadedCommand}" />
                                <MenuItem Header ="Unmark all" Command="{Binding UnmarkAllCommand}"/>
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                    <Button Width="40" VerticalAlignment="Center" Click="ShowDelete" ToolTip="Remove this Show"
                        Height="40"
                        Style="{DynamicResource MetroCircleButtonStyle}">
                        <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="17" Height="17">
                            <Rectangle.OpacityMask>
                                <VisualBrush Visual="{StaticResource appbar_delete}" Stretch="Uniform" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button>
                </StackPanel>
                <controls:Panorama x:Name="Panorama" UseSnapBackScrolling="False" Margin="10,55,10,10"
                               ItemsSource="{Binding PanoramaItems}">
                    <controls:Panorama.Resources>
                        <DataTemplate DataType="{x:Type viewModel:EpisodeTileViewModel}">
                            <controls:Tile Padding="0" Width="120" Height="120" x:Name="tile"
                                       Background="{Binding Background}"
                                       Command="{Binding EpisodeClickedCommand, ElementName=Window}"
                                       CommandParameter="{Binding EpisodeViewModel}">

                                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Border Grid.RowSpan="6"  Visibility="{Binding NewEpisodeVisible}" BorderThickness="1" Background="Transparent" BorderBrush="LightGray"/>

                                    <Image Grid.Row="0" Source="{Binding Thumbnail.ImageSource}" Stretch="UniformToFill"
                                       Grid.RowSpan="6" Opacity="{Binding ImageOpacity}" Visibility="{Binding BackgroundImageVisibility}"/>

                                    
                                    <!---Border Grid.RowSpan="4" Background="#A0010101" /-->


                                
                                    <TextBlock Grid.Row="0" Text="{Binding Title}" TextWrapping="Wrap" Foreground="{Binding Foreground}"
                                        Margin="5,0,0,0" FontSize="20" />
                                    <TextBlock Grid.Row="1" Text="{Binding Languages}" Foreground="{Binding Foreground}" FontSize="10"
                                           Margin="5,0,0,0" />
                                    <TextBlock Grid.Row="2" Text="{Binding Formats}" Foreground="{Binding Foreground}" FontSize="10"
                                           Margin="5,0,0,0" />
                                    <TextBlock Grid.Row="3"
                                            Margin="5,0,0,0"
                                             Text="New Episode!"
                                            Visibility="{Binding NewEpisodeVisible}"
                                            Foreground="{Binding Foreground}" FontWeight="Bold">
                                    </TextBlock>
                                    <TextBlock Grid.Row="3"
                                            Margin="5,0,0,0"
                                             Text="Update!"
                                            Visibility="{Binding NewUpdateVisible}"
                                            Foreground="{Binding Foreground}" FontWeight="Bold">
                                    </TextBlock>
                                    
                                    <StackPanel Grid.Row="5" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,5,5">
                                        <Rectangle Width="16" Height="16" Visibility="{Binding DownloadedCheckVisibility}">
                                            <Rectangle.Fill>
                                                <VisualBrush Visual="{StaticResource appbar_check}" />
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <Rectangle Width="16" Height="16"  Visibility="{Binding WatchedCheckVisibility}">
                                            <Rectangle.Fill>
                                                <VisualBrush Visual="{StaticResource appbar_check}" />
                                            </Rectangle.Fill>
                                        </Rectangle>
                                    </StackPanel>

                                </Grid>

                            </controls:Tile>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsDoubleWidth}" Value="True">
                                    <Setter TargetName="tile" Property="Width" Value="248" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                        <Style TargetType="{x:Type controls:Tile}">
                            <Setter Property="Width" Value="140" />
                            <Setter Property="Height" Value="140" />
                            <Setter Property="Margin" Value="3" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type controls:Tile}">
                                        <Grid Background="{TemplateBinding Background}">
                                            <ContentPresenter RecognizesAccessKey="True" Margin="5" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="RenderTransform">
                                                    <Setter.Value>
                                                        <ScaleTransform ScaleX="0.98"
                                                                    ScaleY="0.98"
                                                                    CenterX="0.5"
                                                                    CenterY="0.5" />
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </controls:Panorama.Resources>
                </controls:Panorama>
            </Grid>
        </TabItem>
        <TabItem Header="EpisodeGrid">
            <Grid x:Name="EpisodeGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" Margin="10,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Button Width="40" VerticalAlignment="Center" Click="EpisodeDataBack"
                        Height="40"
                        Style="{DynamicResource MetroCircleButtonStyle}">
                        <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="20" Height="20">
                            <Rectangle.OpacityMask>
                                <VisualBrush Visual="{StaticResource appbar_arrow_left}" Stretch="Uniform" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button>
                    <Label FontFamily="Segoe UI Symbol" FontSize="24" Foreground="{DynamicResource LabelTextBrush}" Content="{Binding Title}"
                       VerticalAlignment="Center" />
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="10,0,0,0" Visibility="{Binding MarkStuffVisibility}">
                        <Rectangle Width="24" Height="24" Visibility="{Binding DownloadedCheckVisibility}" ToolTip="Downloaded" Fill="{DynamicResource LabelTextBrush}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Visual="{StaticResource appbar_check}" Stretch="Fill" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <Rectangle Width="24" Height="24"  Visibility="{Binding WatchedCheckVisibility}" ToolTip="Watched" Fill="{DynamicResource LabelTextBrush}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Visual="{StaticResource appbar_check}" Stretch="Fill" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </StackPanel>
                </StackPanel>
                <Image Margin="10" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Source="{Binding Thumbnail.ImageSource}"
                   Stretch="UniformToFill" Height="105" />
                <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="1" VerticalAlignment="Top" >
                    <Button Content="Show Review" Margin="10,10,10,10" Command="{Binding ReviewCommand}" />
                    <Button Content="{Binding ButtonStateChangeText}"  Margin="10,10,10,10" Command="{Binding StateChangeCommand }" Visibility="{Binding MarkStuffVisibility}"/>
                </StackPanel>
              
                <ListView x:Name="EpisodeDataList" Margin="10,10,10,10" ItemsSource="{Binding Downloads}" Grid.Column="0"
                      Grid.Row="2" Grid.ColumnSpan="2">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Fav" Width="30" >
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox  ToolTip="Favorite/Unfavorite this Release" IsChecked="{Binding Upload.Favorized}">
                                            <CheckBox.Style>
                                                <Style TargetType="CheckBox">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type CheckBox}">
                                                                <StackPanel Orientation="Horizontal">
                                                                    <Rectangle  x:Name="rect" Fill="{DynamicResource LabelTextBrush}" Width="17" Height="17" Opacity="0.2">
                                                                        <Rectangle.Style>
                                                                            <Style TargetType="Rectangle">
                                                                                <Style.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="OpacityMask">
                                                                                            <Setter.Value>
                                                                                                <VisualBrush Visual="{StaticResource appbar_star_invincible}" Stretch="Uniform" />
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Trigger>
                                                                                </Style.Triggers>
                                                                                <Setter Property="OpacityMask">
                                                                                    <Setter.Value>
                                                                                        <VisualBrush Visual="{StaticResource appbar_star}" Stretch="Uniform" />
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Rectangle.Style>
                                                                    </Rectangle>
                                                                    <ContentPresenter VerticalAlignment="Center" Margin="10,0,0,0" />
                                                                </StackPanel>

                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsChecked" Value="true">
                                                                        <Setter TargetName="rect" Property="Opacity" Value="1" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </CheckBox.Style>
                                        </CheckBox>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Title" DisplayMemberBinding="{Binding Title}" />
                            <GridViewColumn Header="Language" DisplayMemberBinding="{Binding Upload.Language}" />
                            <GridViewColumn Header="Format" DisplayMemberBinding="{Binding Upload.Format}" />
                            <GridViewColumn Header="Runtime" DisplayMemberBinding="{Binding Upload.Runtime}" />
                            <GridViewColumn Header="Size" DisplayMemberBinding="{Binding Upload.Size}" />
                            <GridViewColumn Header="Uploader" DisplayMemberBinding="{Binding Upload.Uploader}" />
                            <GridViewColumn Header="Links (Copy2Clipboard)">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ItemsControl ItemsSource="{Binding Links}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Orientation="Horizontal" />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Button Margin="4" Padding="4,0" 
                                                        Command="{Binding DataContext.DownloadCommand, ElementName=EpisodeGrid}" ToolTip="{Binding Key}"
                                                        CommandParameter="{Binding Value}" >
                                                        <ContentPresenter Content="{Binding Key,Converter={StaticResource StringToFaviconConverter}}" >
                                                            <ContentPresenter.ContentTemplate>
                                                                <DataTemplate>
                                                                    <Image Source="{Binding Image}" Width="16" Height="16"/>
                                                                </DataTemplate>
                                                            </ContentPresenter.ContentTemplate>
                                                        </ContentPresenter>
                                                    </Button>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>
            </Grid>
        </TabItem>
        <TabItem Header="SettingsGrid">
            <Grid x:Name="SettingsGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal" Margin="10,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Button Width="40" VerticalAlignment="Center"
                        Command="{Binding SettingsCommand, ElementName=Window}"
                        Height="40"
                        Style="{DynamicResource MetroCircleButtonStyle}">
                        <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="20" Height="20">
                            <Rectangle.OpacityMask>
                                <VisualBrush Visual="{StaticResource appbar_arrow_left}" Stretch="Uniform" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button>
                    <Label FontFamily="Segoe UI Symbol" FontSize="24" Foreground="{DynamicResource LabelTextBrush}" Content="Settings"
                       VerticalAlignment="Center" />
                </StackPanel>

                <StackPanel Margin="0,15,10,0" HorizontalAlignment="Right" Grid.Row="0" Orientation="Horizontal">
                    <Label VerticalAlignment="Center" Content="You might have to restart the program for the changes to take effect."/>
                    <Button Width="40" ToolTip="Restart Application" HorizontalAlignment="Center" VerticalAlignment="Center"
                        Height="40"
                        Style="{DynamicResource MetroCircleButtonStyle}" Click="restartButton_Click">
                        <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="17" Height="17">
                            <Rectangle.OpacityMask>
                                <VisualBrush Visual="{StaticResource appbar_debug_restart}" Stretch="Uniform" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button>
                </StackPanel>

                <GroupBox Header="Apperance" Grid.Row="1" Margin="10,10,10,10">
                    <StackPanel>
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition MaxWidth="500" Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition MaxWidth="500" Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Label Content="Theme:"/>
                            <ComboBox Grid.Column="1"
                                  ItemsSource="{Binding Source={x:Static metro:ThemeManager.AppThemes}}"
                                  DisplayMemberPath="Name" SelectedValuePath="Name"
                                  SelectedValue="{Binding CurrentTheme, ElementName=Window}" />
                            <Label Content="Accent:" Grid.Column="2"/>
                            <ComboBox Grid.Column="3"
                                  ItemsSource="{Binding Source={x:Static metro:ThemeManager.DefaultAccents}}"
                                  DisplayMemberPath="Name" SelectedValuePath="Name"
                                  SelectedValue="{Binding CurrentAccent, ElementName=Window}" />
                        </Grid>

                        <CheckBox Content="Sort Tv Shows Alphabetically" Margin="0,2"
                              IsChecked="{Binding SortShowsAlphabetically, Source={x:Static local:Settings.Instance}}" />
                        <CheckBox Content="Sort Seasons Descending"  Margin="0,2"
                              IsChecked="{Binding SortSeasonsDesc, Source={x:Static local:Settings.Instance}}" />
                        <CheckBox Content="Sort Episodes Descending"  Margin="0,2"
                              IsChecked="{Binding SortEpisodesDesc, Source={x:Static local:Settings.Instance}}" />
                        <CheckBox Content="Mark 'German Subbed' Episodes as German"  Margin="0,2,0,1"
                              IsChecked="{Binding MarkSubbedAsGerman, Source={x:Static local:Settings.Instance}}" />
                        
                        <StackPanel Orientation="Horizontal">
                            <CheckBox Content="Show Notifications" IsChecked="{Binding ShowNotifications, Source={x:Static local:Settings.Instance}}"/>
                            <Label VerticalContentAlignment="Center" Content="Timeout for popup:" Margin="20,0,0,0"/>
                            <ComboBox Width="100" ItemsSource="{Binding Source={x:Static local:MainWindow.DictNotifyTimeouts}}"
                                  DisplayMemberPath="Key" SelectedValuePath="Value"
                                  SelectedValue="{Binding NotificationTimeout, Source={x:Static local:Settings.Instance}}"/>
                        </StackPanel>
                        
                        <CheckBox Content="Enable Images" IsChecked="{Binding EnableImages, Source={x:Static local:Settings.Instance}}"/>
                       
                    </StackPanel>
                </GroupBox>
                <GroupBox Header="Other" Grid.Row="3" Margin="10,10,10,10">
                    <StackPanel>
                        <CheckBox Content="Only Minimize to Tray when closing"
        				IsChecked="{Binding MinimizeToTray, Source={x:Static local:Settings.Instance}}" />
                        <Grid Width="500" HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Label Content="Number of working Threads:"/>
                            <Slider Minimum="1" Maximum="12" x:Name="threadSlider" Grid.Column="1" SmallChange="1"
        					IsSnapToTickEnabled="True"
        					Value="{Binding NumFetchThreads, Source={x:Static local:Settings.Instance}}" />
                            <Label Content="{Binding Value, ElementName=threadSlider}" Grid.Column="2" />
                        </Grid>
                        <Grid Width="500" HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            
                            <Label Content="Update Shows Automatically:"/>
                            <ComboBox Grid.Column="1" Grid.Row="0" ItemsSource="{Binding Source={x:Static local:MainWindow.DictUpdateTimes}}"
                                  DisplayMemberPath="Key" SelectedValuePath="Value"
                                  SelectedValue="{Binding UpdateTime, Source={x:Static local:Settings.Instance}}"/>

                        </Grid>
                        <CheckBox Content="Don't send any personal data (your favorite tv shows) to stats server"
        				IsChecked="{Binding NoPersonalData, Source={x:Static local:Settings.Instance}}" />
                        <Separator Margin="0,10,0,5"/>
                        <StackPanel Orientation="Horizontal">
                            <Label>Current Version:</Label>
                            <Label Content="{Binding ElementName=Window,Path=CurrentVersionString}" Margin="10,0"/>
                            <Button Click="ChangeLogButtonClicked">Changelog / Updates</Button>
                            <CheckBox Margin="20,0,0,0" Content="Autocheck at start and every 30 minutes" IsChecked="{Binding CheckForUpdates, Source={x:Static local:Settings.Instance}}"/>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
                <GroupBox Grid.Row="2" Margin="10,10,10,10" Header="Default Filter">
                    <Grid DataContext="{Binding Source={x:Static local:Settings.Instance}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50*" />
                            <ColumnDefinition Width="50" />
                            <ColumnDefinition Width="50*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <CheckBox Grid.Row="0" Grid.Column="0" Content="Show Non-Season Stuff" IsChecked="{Binding FilterShowNonSeason}"  Margin="0,5,0,0"/>
                        <CheckBox Grid.Row="1" Grid.Column="0" Content="Show Non-Episodes" IsChecked="{Binding FilterShowNonEpisode}"  Margin="0,5,0,0"/>
                        <Label Grid.Row="2" Grid.Column="0" Content="Regex Name:"/>
                        <TextBox Grid.Row="3" Grid.Column="0" controls:TextboxHelper.Watermark="e.g. .*-TVS$"
                             controls:TextboxHelper.ClearTextButton="True">
                            <Binding Path="FilterName" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Grid.Row="4" Grid.Column="0" Content="Regex Format:"/>
                        <TextBox Grid.Row="5" Grid.Column="0" controls:TextboxHelper.Watermark="e.g. (1080|720)(p|i)"
                             controls:TextboxHelper.ClearTextButton="True">
                            <Binding Path="FilterFormat" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Grid.Row="6" Grid.Column="0" Content="Regex Uploader:"/>
                        <TextBox Grid.Row="7" Grid.Column="0" controls:TextboxHelper.Watermark="Regex or leave Empty"
                             controls:TextboxHelper.ClearTextButton="True">
                            <Binding Path="FilterUploader" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>

                        <Label  Grid.Row="0" Grid.Column="2" Content="Regex Size:"/>
                        <TextBox Grid.Row="1" Grid.Column="2" controls:TextboxHelper.Watermark="Regex or leave Empty"
                             controls:TextboxHelper.ClearTextButton="True">
                            <Binding Path="FilterSize" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Grid.Row="2" Grid.Column="2" Content="Regex Runtime:"/>
                        <TextBox Grid.Row="3" Grid.Column="2" controls:TextboxHelper.Watermark="Regex or leave Empty"
                             controls:TextboxHelper.ClearTextButton="True">
                            <Binding Path="FilterRuntime" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Grid.Row="4" Grid.Column="2" Content="Regex Hoster:"/>
                        <TextBox Grid.Row="5" Grid.Column="2" controls:TextboxHelper.Watermark="e.g. share-online|uploaded"
                             controls:TextboxHelper.ClearTextButton="True">
                            <Binding Path="FilterHoster" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Grid.Row="6" Grid.Column="2" Content="Language:"/>
                        <ComboBox Grid.Row="7" Grid.Column="2" 
                                  ItemsSource="{Binding Source={x:Static model:UploadData.LanguagesValues}}"  
                                  SelectedItem="{Binding FilterLanguage}"/>
                    </Grid>
                </GroupBox>
            </Grid>
        </TabItem>
    </TabControl>
</controls:MetroWindow>