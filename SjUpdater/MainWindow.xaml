<controls:MetroWindow
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:local="clr-namespace:SjUpdater"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:viewModel="clr-namespace:SjUpdater.ViewModel"
                      xmlns:utils="clr-namespace:SjUpdater.Utils"
                      xmlns:model="clr-namespace:SjUpdater.Model"
                      xmlns:metro="clr-namespace:MahApps.Metro;assembly=MahApps.Metro"
                      xmlns:taskbarNotification="clr-namespace:Hardcodet.Wpf.TaskbarNotification;assembly=Hardcodet.Wpf.TaskbarNotification"
                      xmlns:System="clr-namespace:System;assembly=mscorlib"
                      x:Class="SjUpdater.MainWindow"
                      Title="Serienjunkies Updater" Height="784.65" Width="1096" x:Name="Window" SaveWindowPosition="True" MinWidth="800" MinHeight="600"
                      Closing="MainWindow_OnClosing" AllowsTransparency="True" WindowStyle="None" Icon="Resources/icon3.ico" TextOptions.TextFormattingMode="Display" >
    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands ShowSeparators="False">
            <Button Click="AddShow" ToolTip="Add Show">
                <Rectangle Width="15" Height="15"
                    Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill"
                            Visual="{StaticResource appbar_add}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <Button Click="ReloadAll" ToolTip="Recheck all">
                <Rectangle Width="17" Height="20"
                    Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill"
                            Visual="{StaticResource appbar_refresh}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <Button Click="OpenHomepage" ToolTip="Open serienjunkies.org">
                <Rectangle Width="15" Height="15"
                    Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill"
                            Visual="{StaticResource appbar_browser}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
          <Rectangle    SnapsToDevicePixels="True"
                        IsHitTestVisible="False"
                        Opacity="0.25"
                        Width="1"
                        Height="15"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Right"
                        Fill="{Binding RelativeSource={RelativeSource AncestorType=controls:WindowCommands}, Path=Foreground}"
                        Margin="8,0,0,0" />
            <Button Click="GithubClicked" ToolTip="Show Project on Github">
                <Rectangle Width="24" Height="20"
                   Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill"
                         Visual="{StaticResource appbar_social_github_octocat_solid}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <Button Click="SettingsClicked" ToolTip="Settings">
                <Rectangle Width="20" Height="20"
                   Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill"
                         Visual="{StaticResource appbar_settings}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <Rectangle  SnapsToDevicePixels="True"
                        IsHitTestVisible="False"
                        Opacity="0.25"
                        Width="1"
                        Height="15"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Right"
                        Fill="{Binding RelativeSource={RelativeSource AncestorType=controls:WindowCommands}, Path=Foreground}"
                        Margin="0" />
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>
    <controls:MetroWindow.Resources>
        <utils:StringToFaviconConverter x:Key="StringToFaviconConverter" />
        <utils:EnumTextValueConverter x:Key="EnumTextValueConverter" />
        <utils:GridViewWidthCalulationMultiConverter x:Key="lastColumnMaximizerConverter"/>
    </controls:MetroWindow.Resources>
    <controls:MetroWindow.Flyouts>
        <controls:FlyoutsControl>
            <controls:Flyout Header="Add TV Show" Position="Right" x:Name="AddShowFlyout" Theme="Adapt">
                <Grid Margin="25" Width="260">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" MaxWidth="210" controls:TextBoxHelper.ClearTextButton="True"
                             controls:TextBoxHelper.Watermark="Type Showname" x:Name="TextBoxAutoComl"
                             TextChanged="SearchTextBox_TextChanged" PreviewKeyUp="TextBoxAutoComl_PreviewKeyUp" />

                        <Button Grid.Column="1" Width="Auto" Height="Auto" Content="Add" VerticalAlignment="Center" Margin="3,0,3,0" Style="{DynamicResource MetroFlatButton}" Click="AddSelectedShowButton_Click" >
                            <Button.ToolTip>
                                <TextBlock>
                                        Add selected show
                                        <LineBreak />
                                        <LineBreak />
                                        you can also doubleclick on a show
                                        <LineBreak/>
                                        or use Enter to add the first show
                                </TextBlock>
                            </Button.ToolTip>
                        </Button>

                        <Button Grid.Column="2" Width="Auto" Height="Auto" Content="M" VerticalAlignment="Center" Margin="5,0,3,0" Style="{DynamicResource MetroFlatButton}" Click="AddShowViaLinkButton_Click" >
                            <Button.ToolTip>
                                <TextBlock>
                                        Enter link to add show
                                </TextBlock>
                            </Button.ToolTip>
                        </Button>
                    </Grid>

                    <ListView Grid.Row="1" Margin="0,-1,0,0" x:Name="ListViewAutoCompl" DisplayMemberPath="Key"
                              MouseDoubleClick="ListViewAutoCompl_MouseDoubleClick" Foreground="{x:Null}"
                              Background="{x:Null}" BorderBrush="{x:Null}" />
                </Grid>
            </controls:Flyout>
            <controls:Flyout Header="Filter" Position="Left" x:Name="FilterFlyout"
                             IsOpenChanged="FilterFlyout_OnIsOpenChanged" Theme="Adapt">
                <Grid Margin="25" Width="250">
                    <StackPanel Orientation="Vertical">
                        <Label Content="Regex Name:"/>
                        <TextBox controls:TextBoxHelper.Watermark="e.g. .*-TVS$"
                                 controls:TextBoxHelper.ClearTextButton="True">
                            <Binding Path="FilterName" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Content="Regex Format:"/>
                        <TextBox controls:TextBoxHelper.Watermark="e.g. (1080|720)(p|i)"
                                 controls:TextBoxHelper.ClearTextButton="True">
                            <Binding Path="FilterFormat" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Content="Regex Uploader:"/>
                        <TextBox controls:TextBoxHelper.Watermark="Regex or leave Empty"
                                 controls:TextBoxHelper.ClearTextButton="True">
                            <Binding Path="FilterUploader" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Content="Regex Size:"/>
                        <TextBox controls:TextBoxHelper.Watermark="Regex or leave Empty"
                                 controls:TextBoxHelper.ClearTextButton="True">
                            <Binding Path="FilterSize" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Content="Regex Runtime:"/>
                        <TextBox controls:TextBoxHelper.Watermark="Regex or leave Empty"
                                 controls:TextBoxHelper.ClearTextButton="True">
                            <Binding Path="FilterRuntime" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Content="Regex Hoster:"/>
                        <TextBox controls:TextBoxHelper.Watermark="e.g. share-online|uploaded"
                                 controls:TextBoxHelper.ClearTextButton="True">
                            <Binding Path="FilterHoster" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <utils:RegexValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>
                        <Label Content="Language:"/>
                        <ComboBox ItemsSource="{Binding Source={x:Static model:UploadData.LanguagesValues}}" 
                                  SelectedItem="{Binding FilterLanguage}" />
                    </StackPanel>
                </Grid>
            </controls:Flyout>
        </controls:FlyoutsControl>
    </controls:MetroWindow.Flyouts>
    <controls:MetroWindow.CommandBindings>
        <CommandBinding Command="BrowseBack" Executed="NavBack"/>
    </controls:MetroWindow.CommandBindings>
    <TabControl x:Name="MainTabControl">
        <TabControl.Template>
            <ControlTemplate TargetType="TabControl">
                <ContentPresenter Content="{TemplateBinding SelectedContent}"/>
            </ControlTemplate>
        </TabControl.Template>
        <TabItem Header="Overview">
            <Grid x:Name="OverviewGrid">
                <taskbarNotification:TaskbarIcon x:Name="NotifyIcon" DataContext="{Binding ElementName=Window}" ToolTipText="SjUpdater" DoubleClickCommand="{Binding IconClickedCommand, ElementName=Window}" IconSource="Resources/icon3.ico" >
                    <taskbarNotification:TaskbarIcon.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Open" Command="{Binding IconClickedCommand}" FontWeight="Bold"/>
                            <MenuItem Header="Exit" Command="{Binding TerminateCommand}"/>
                        </ContextMenu>
                    </taskbarNotification:TaskbarIcon.ContextMenu>
                </taskbarNotification:TaskbarIcon>

                <ScrollViewer Margin="10,0,3,0" VerticalAlignment="Stretch" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Padding="0,3">
                    <ItemsControl ItemsSource="{Binding Categories}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Vertical" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type model:ShowCategory}">
                                <StackPanel Orientation="Vertical">
                                    <Label FontSize="20pt" Content="{Binding Settings.Description}" Margin="0,-5,0,0"/>
                                    <ItemsControl ItemsSource="{Binding Shows}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.Resources>
                                        <Style TargetType="{x:Type controls:Tile}">
                                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush4}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type controls:Tile}">
                                                        <Grid Background="{TemplateBinding Background}">
                                                            <ContentPresenter RecognizesAccessKey="True" />
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ItemsControl.Resources>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate DataType="{x:Type viewModel:ShowTileViewModel}">
                                            <controls:Tile Width="240" Height="115" x:Name="tile" Title="{Binding Title}" Command="{Binding ShowClickedCommand, ElementName=Window}" CommandParameter="{Binding}">
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="25" />
                                                            <RowDefinition Height="90" />
                                                        </Grid.RowDefinitions>
                                                        <Label Grid.Row="0" VerticalAlignment="Center" Content="{Binding Title}" Padding="5,0" FontSize="15px" FontWeight="DemiBold"/>

                                                        <Image Grid.Row="1" Source="{Binding Background.ImageSource}" Stretch="UniformToFill" Opacity="0.85" Visibility="{Binding BackgroundImageVisibility}" />
                                                        <controls:ProgressRing Grid.Row="1" Margin="25,0,25,0" Visibility="{Binding IsLoadingVisible}" Foreground="White"/>
                                                        
                                                        <Grid Grid.Row="1">
                                                            <Grid.Style>
                                                                <Style TargetType="{x:Type Grid}">
                                                                    <Style.Setters>
                                                                        <Setter Property="Visibility" Value="{Binding OverlayDefaultVisibility}"/>
                                                                    </Style.Setters>
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}, Path=IsMouseOver}" Value="True">
                                                                            <Setter Property="Visibility" Value="Visible"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Grid.Style>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>
                                                            <Rectangle Grid.RowSpan="3" Fill="{DynamicResource WhiteBrush}" Opacity="0.8" />
                                                            <Label Grid.Row="0" HorizontalAlignment="Left" Padding="5,5,5,0" Content="{Binding NumberText}" />
                                                            <TextBlock Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" Text ="{Binding NewsText}" Foreground="LimeGreen" FontWeight="Bold" Padding="5,0" TextTrimming="WordEllipsis"/>
                                                            <StackPanel Grid.Row="2">
                                                                <Label HorizontalAlignment="Left" VerticalAlignment="Top"  Padding="5,0" Content="{Binding NextText}" />
                                                                <Label HorizontalAlignment="Left" VerticalAlignment="Top" Padding="5,0,5,5" Content="{Binding PrevText}" />
                                                            </StackPanel>
                                                        </Grid>

                                                        <Grid Grid.Row="1" VerticalAlignment="Bottom">
                                                            <Grid.Style>
                                                                <Style TargetType="{x:Type Grid}">
                                                                    <Style.Setters>
                                                                        <Setter Property="Visibility" Value="{Binding BottomVisible}"/>
                                                                    </Style.Setters>
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Grid},Path=IsMouseOver}" Value="True">
                                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Grid.Style>
                                                            <Rectangle Fill="{DynamicResource WhiteBrush}" Opacity="0.8" Height="18pt" />
                                                            <TextBlock Text="{Binding BottomText}" VerticalAlignment="Center" Foreground="{DynamicResource BlackColorBrush}" TextTrimming="WordEllipsis" Padding="5,0" />
                                                        </Grid>
                                                    </Grid>
                                            </controls:Tile>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                    <Separator/>
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </Grid>
        </TabItem>
        <TabItem Header="ShowGrid">
            <Grid x:Name="ShowGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.7*" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="0.3*" MaxWidth="600" MinWidth="300"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid Grid.ColumnSpan="2"  HorizontalAlignment="Stretch" Background="Transparent" PreviewMouseLeftButtonUp="OutsideTreeview_OnMouseLeftButtonUp" >
                    <StackPanel  Margin="10" Orientation="Horizontal" HorizontalAlignment="Left">
                        <Button Width="40" VerticalAlignment="Center" Click="EpisodesBack"
                            Height="40"
                            Style="{DynamicResource MetroCircleButtonStyle}">
                            <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="20" Height="20">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Visual="{StaticResource appbar_arrow_left}" Stretch="Uniform" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                        <Label FontFamily="Segoe UI Symbol" FontSize="24" Foreground="{DynamicResource LabelTextBrush}" Content="{Binding Title}" VerticalAlignment="Center"/>
                    </StackPanel>
                    <StackPanel  Margin="10" Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Width="40" VerticalAlignment="Center" Click="ShowFilter" ToolTip="Open Filter"
                            Height="40"
                            Style="{DynamicResource MetroCircleButtonStyle}">
                            <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="17" Height="17">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Visual="{StaticResource appbar_filter}" Stretch="Uniform" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                        <Button Width="40" VerticalAlignment="Center" Click="CleanShow" ToolTip="Clear Episode-Cache"
                            Height="40"
                            Style="{DynamicResource MetroCircleButtonStyle}">
                            <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="17" Height="17">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Visual="{StaticResource appbar_clean}" Stretch="Uniform" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                        <Button Width="40" VerticalAlignment="Center" Click="ShowGotoPage" ToolTip="Open on serienjunkies.org"
                            Height="40"
                            Style="{DynamicResource MetroCircleButtonStyle}">
                            <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="17" Height="17">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Visual="{StaticResource appbar_browser}" Stretch="Uniform" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                        <Button Width="40" VerticalAlignment="Center" ToolTip="Mark all..." Click="MarkContextMenuButtonClicked"  ContextMenuService.IsEnabled="false"
                            Height="40"
                            Style="{DynamicResource MetroCircleButtonStyle}">
                            <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="17" Height="17">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Visual="{StaticResource appbar_checkmark_pencil}" Stretch="Uniform" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <Button.ContextMenu>
                                <ContextMenu Placement="RelativePoint" VerticalOffset="32" HorizontalOffset="32" DataContext="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                    <MenuItem Header ="Mark all as Watched" Command="{Binding MarkAllWatchedCommand}" />
                                    <MenuItem Header ="Mark all as Downloaded" Command="{Binding MarkAllDownloadedCommand}" />
                                    <MenuItem Header ="Unmark all" Command="{Binding UnmarkAllCommand}"/>
                                </ContextMenu>
                            </Button.ContextMenu>
                        </Button>
                        <Button Width="40" VerticalAlignment="Center" Click="ShowDelete" ToolTip="Remove this Show"
                            Height="40"
                            Style="{DynamicResource MetroCircleButtonStyle}">
                            <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="17" Height="17">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Visual="{StaticResource appbar_delete}" Stretch="Uniform" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                    </StackPanel>
                </Grid>

                <TreeView Grid.Row="1" Grid.Column="0" Grid.IsSharedSizeScope="True" utils:TreeViewExtensions.EnableMultiSelect="true" ItemsSource="{Binding Seasons}" x:Name="ShowTreeView">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MetroTreeViewItem}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                        <StackPanel>
                                            <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                MinHeight="{TemplateBinding MinHeight}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                <Grid Margin="{Binding Converter={StaticResource LengthConverter}, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                  VerticalAlignment="Stretch">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="19" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <ToggleButton x:Name="Expander"
                                              Style="{StaticResource ExpandCollapseToggleStyle}"
                                              IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}"
                                              ClickMode="Press" />

                                                    <ContentPresenter x:Name="PART_Header"
                                                  Grid.Column="1"
                                                  ContentSource="Header"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                </Grid>
                                            </Border>
                                            <ItemsPresenter x:Name="ItemsHost">
                                                <ItemsPresenter.LayoutTransform>
                                                    <ScaleTransform ScaleY="1" />
                                                </ItemsPresenter.LayoutTransform>
                                            </ItemsPresenter>
                                        </StackPanel>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsExpanded"
                                 Value="False">
                                                <Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Collapsed" />
                                            </Trigger>

                                            <Trigger Property="HasItems"
                                 Value="False">
                                                <Setter TargetName="Expander"
                                    Property="Visibility"
                                    Value="Hidden" />
                                            </Trigger>

                                            <Trigger SourceName="Border"
                                 Property="IsMouseOver"
                                 Value="True">
                                                <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush3}" />
                                                <Setter Property="Foreground"
                                    Value="{DynamicResource BlackColorBrush}" />
                                            </Trigger>
                                            <Trigger Property="utils:TreeViewExtensions.IsSelected"
                                 Value="True">
                                                <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Foreground"
                                    Value="{DynamicResource AccentSelectedColorBrush}" />
                                            </Trigger>
                                            <Trigger Property="utils:TreeViewExtensions.IsSelected"
                                 Value="{x:Null}">
                                                <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush4}" />
                                                <Setter Property="Foreground"
                                    Value="{DynamicResource AccentSelectedColorBrush}" />
                                            </Trigger>
                                            <Trigger Property="IsEnabled"
                                 Value="False">
                                                <Setter Property="Foreground"
                                    Value="{DynamicResource GrayBrush7}" />
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsEnabled"
                                           Value="False" />
                                                    <Condition Property="utils:TreeViewExtensions.IsSelected"
                                           Value="True" />
                                                </MultiTrigger.Conditions>
                                                <MultiTrigger.Setters>
                                                    <Setter TargetName="Border"
                                        Property="Background"
                                        Value="{DynamicResource GrayBrush7}" />
                                                    <Setter Property="Foreground"
                                        Value="{DynamicResource AccentSelectedColorBrush}" />
                                                </MultiTrigger.Setters>
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="utils:TreeViewExtensions.IsSelected"
                                           Value="True" />
                                                    <Condition Property="Selector.IsSelectionActive"
                                           Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush2}" />
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.Resources>
                        <HierarchicalDataTemplate DataType="{x:Type viewModel:SeasonViewModel}" ItemsSource="{Binding Episodes}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Label FontSize="18" Content="{Binding Name}" />
                                <Label Grid.Column="1" Content="{Binding EpisodeCount}" Margin="10,0" VerticalAlignment="Center"/>
                            </Grid>
                        </HierarchicalDataTemplate>

                        <DataTemplate DataType="{x:Type viewModel:EpisodeViewModel}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="a"/>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="b"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="c"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="d" />
                                </Grid.ColumnDefinitions>
                                <Label Content="{Binding Number}" Grid.Column="0" Margin="-20,0,0,0" Foreground="{DynamicResource DisabledMenuItemForeground}" />
                                <TextBlock Text="{Binding Title}" Padding="5" Grid.Column="1" />
                                
                                <StackPanel Grid.Column="2" Orientation="Horizontal">
                                    <Label 
                                            Margin="5,0,0,0"
                                             Content ="New Episode!"
                                            Visibility="{Binding NewEpisodeVisible}"
                                            Foreground="LimeGreen" FontWeight="Bold">
                                    </Label>
                                    <Label
                                            Margin="5,0,0,0"
                                             Content="Update!"
                                            Visibility="{Binding NewUpdateVisible}"
                                            Foreground="LimeGreen" FontWeight="Bold">
                                    </Label>
                                </StackPanel>
                                
                                <Label Content="{Binding Formats}" Grid.Column="3" Foreground="{DynamicResource DisabledMenuItemForeground}"/>
                                <Label Content="{Binding Languages}" Grid.Column="4"  Margin="0,0,10,0" Foreground="{DynamicResource DisabledMenuItemForeground}" />
                                <StackPanel Grid.Column="5" Orientation="Horizontal"  Margin="0,0,10,0">
                                    <Rectangle Width="16" Height="16" Visibility="{Binding DownloadedCheckVisibility}" ToolTip="Downloaded" Fill="{DynamicResource DisabledMenuItemForeground}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Visual="{StaticResource appbar_disk}" Stretch="Fill" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                    <Rectangle Width="26" Height="16"  Visibility="{Binding WatchedCheckVisibility}" ToolTip="Watched" Fill="{DynamicResource DisabledMenuItemForeground}" Margin="5,0,0,0">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Visual="{StaticResource appbar_eye}" Stretch="Fill" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </StackPanel>
                            </Grid>

                        </DataTemplate>

                    </TreeView.Resources>
                </TreeView>

                <GridSplitter Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Width="5" HorizontalAlignment="Stretch" />
                <Border Background="{DynamicResource AccentColorBrush4}" Grid.Column="2" Grid.Row="0" Grid.RowSpan="2">
                    <TabControl x:Name="EpisodeTabControl" SelectedIndex="0">
                        <TabControl.Template>
                            <ControlTemplate TargetType="TabControl">
                                <ContentPresenter Content="{TemplateBinding SelectedContent}"/>
                            </ControlTemplate>
                        </TabControl.Template>
                        <TabItem Header="None">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" /> <!-- image-->
                                    <RowDefinition Height="200" /> <!-- desc -->
                                    <RowDefinition Height="Auto" /> <!--- separator -->
                                    <RowDefinition Height="Auto" /> <!--- button and header-->
                                    <RowDefinition Height="*"/> <!--- list-->
                                </Grid.RowDefinitions>
                                <Image Source="{Binding Cover.ImageSource}" VerticalAlignment="Top" Stretch="Uniform" Visibility="{Binding SeasonImageVisibility}"/>

                                <ScrollViewer Margin="10" Grid.Row="1" VerticalScrollBarVisibility="Visible">
                                    <TextBlock TextWrapping="Wrap" Text="{Binding Description}"/>
                                   
                                </ScrollViewer>
                                <Separator Grid.Row="2" Grid.Column="0" Margin="10,0"/>
                                <Label Grid.Row="3" FontSize="18" Margin="5,0,0,0">Unsortable Downloads</Label>
                                <Button HorizontalAlignment="Right" Grid.Row="3"  Content="Show Detailed" Margin="10,5" Click="NoneShowAllDownloads" x:Name="NoneShowAllDownloadsButton"/>

                                <Popup Grid.Row="3" StaysOpen="False" x:Name="NonePopup" 
                                       PlacementTarget="{Binding ElementName=NoneShowAllDownloadsButton}" Placement="Left" HorizontalOffset="62" >
                                    <Border BorderBrush="{DynamicResource LabelTextBrush}" BorderThickness="1" Background="{DynamicResource AccentColorBrush3}" >
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <Label FontSize="18" Margin="10,0,0,0" >Unsortable Downloads</Label>
                                            <Button  Grid.Row="0" Margin="20,1,9,1" Width="22"  Height="22" Style="{DynamicResource MetroWindowButtonStyle}" HorizontalAlignment="Right" Click="NoneCloseAllDownloads">
                                                <Path Data="F1M0,0L2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0z"
                                          SnapsToDevicePixels="True"
                                          Fill="White" HorizontalAlignment="Right"/>
                                            </Button>
                                            <local:DownloadPopupList  Grid.Row="1" Margin="10,0,10,10" 
                                                                      ItemsSource="{Binding DataContext.NonSeasons, ElementName=ShowGrid}"
                                                                      DownloadCommand="{Binding DataContext.DownloadCommand, ElementName=ShowGrid}"
                                                                      ShowFavColumn="False" />
                                        </Grid>
                                    </Border>
                                </Popup>

                                <local:SpecialDownloadList  Grid.Row="4"  Margin="10,0,10,10"
                                                            ItemsSource="{Binding DataContext.NonSeasons, ElementName=ShowGrid}" 
                                                           DownloadCommand="{Binding DataContext.DownloadCommand, ElementName=ShowGrid}" />
                                
                            </Grid>

                        </TabItem>
                        <TabItem Header="Season"  x:Name="EpisodeTabControl_Season" DataContext="{x:Null}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="0" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Row="0"   FontSize="24" Text="{Binding Name }" Margin="10,5" />

                
                                <!--<Image Grid.Row="1" Margin="10" Grid.Column="0" Source="{Binding Cover.ImageSource}" HorizontalAlignment="Left" VerticalAlignment="Top" Stretch="Uniform" />-->

                                <Separator Grid.Row="2" Margin="10,0"/>
                                <Label Grid.Row="3" FontSize="18" Margin="5,0,0,0">Non-Episodes &amp; Packs</Label>
                                <Button HorizontalAlignment="Right" Grid.Row="3"  Content="Show Detailed" Margin="10,5" Click="SeasonShowAllDownloads" x:Name="SeasonShowAllDownloadsButton"/>
                                <Popup Grid.Row="3" StaysOpen="False" x:Name="SeasonPopup" 
                                       PlacementTarget="{Binding ElementName=SeasonShowAllDownloadsButton}" Placement="Left" HorizontalOffset="62">
                                    <Border BorderBrush="{DynamicResource LabelTextBrush}" BorderThickness="1" Background="{DynamicResource AccentColorBrush3}" >
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <Label FontSize="18" Margin="10,0,0,0" >Non-Episodes &amp; Packs</Label>
                                            <Button  Grid.Row="0" Margin="20,1,9,1" Width="22"  Height="22" Style="{DynamicResource MetroWindowButtonStyle}" HorizontalAlignment="Right" Click="SeasonCloseAllDownloads">
                                                <Path Data="F1M0,0L2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0z"
                                          SnapsToDevicePixels="True"
                                          Fill="White" HorizontalAlignment="Right"/>
                                            </Button>

                                            <local:DownloadPopupList  Grid.Row="1" Margin="10,0,10,10" 
                                                                      ItemsSource="{Binding NonEpisodes}"
                                                                      DownloadCommand="{Binding DownloadCommand}"
                                                                      ShowFavColumn="False" />
                                        </Grid>
                                    </Border>
                                </Popup>

                                <local:SpecialDownloadList  Grid.Row="4"  Margin="10,0,10,10"
                                                            ItemsSource="{Binding NonEpisodes}" 
                                                            DownloadCommand="{Binding DownloadCommand}" />

                            </Grid>

                        </TabItem>
                        <TabItem Header="Episode" x:Name="EpisodeTabControl_Episode" DataContext="{x:Null}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" /> <!-- Title /Button -->
                                    <RowDefinition Height="Auto" /> <!-- Image -->
                                    <RowDefinition Height="Auto" /> <!-- More buttons -->
                                    <RowDefinition Height="Auto" /> <!-- Separator -->
                                    <RowDefinition Height="Auto" /> <!-- Title of list -->
                                    <RowDefinition Height="*"/> <!-- List -->
                                </Grid.RowDefinitions>
                                
                                <Grid Grid.Row ="0" Margin="10,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <TextBlock FontSize="24" Text="{Binding Title }" TextTrimming="CharacterEllipsis" ToolTip="{Binding Title}" VerticalAlignment="Center" />
                                    <Rectangle Grid.Column="1" Width="16" Height="16" Visibility="{Binding DownloadedCheckVisibility}" ToolTip="Downloaded" Fill="{DynamicResource LabelTextBrush}"  Margin="10,0,0,0">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Visual="{StaticResource appbar_disk}" Stretch="Fill" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                    <Rectangle Grid.Column="2" Width="26" Height="16" Visibility="{Binding WatchedCheckVisibility}" ToolTip="Watched" Fill="{DynamicResource LabelTextBrush}" Margin="5,0,0,0">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Visual="{StaticResource appbar_eye}" Stretch="Fill" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Grid>



                                <Image Grid.Row="1"  Margin="10,5" Source="{Binding Photo.ImageSource}" HorizontalAlignment="Stretch" VerticalAlignment="Top" Stretch="Uniform"  Visibility="{Binding EpisodeImageVisibility}" />


                                <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="2" VerticalAlignment="Top"  Margin="10,5,0,5">
                                    <Button Content="Show Info Online"  Command="{Binding ShowInfoCommand}" Margin="0,0,5,0"  />
                                    <Button Content="{Binding ButtonStateChangeText}"  Command="{Binding StateChangeCommand }" />
                                </StackPanel>
                                 
                                <Separator Grid.Row="3" Margin="10,5,10,0"/>
                                <Label Grid.Row="4" FontSize="18" Margin="5,0,0,0" Content="{Binding ListTitle}" />
                                <Button HorizontalAlignment="Right" Grid.Row="4" Grid.Column="0" Content="{Binding ButtonPopupTitle}" Margin="10,5" Click="EpisodeShowAllDownloads" x:Name="EpisodeShowAllDownloadsButton"/>
                                <Popup Grid.Row="4" StaysOpen="False" x:Name="EpisodePopup" 
                                       PlacementTarget="{Binding ElementName=EpisodeShowAllDownloadsButton}" Placement="Left" HorizontalOffset="62" Closed="EpisodePopup_Closed" >
                                    <Border BorderBrush="{DynamicResource LabelTextBrush}" BorderThickness="1" Background="{DynamicResource AccentColorBrush3}" >
                                            <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                            <Label FontSize="18" Margin="10,0,0,0" >All Uploads</Label>
                                            <Button  Grid.Row="0" Margin="20,1,9,1" Width="22"  Height="22" Style="{DynamicResource MetroWindowButtonStyle}" HorizontalAlignment="Right" Click="EpisodeCloseAllDownloads">
                                                <Path Data="F1M0,0L2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0z"
                                          SnapsToDevicePixels="True"
                                          Fill="White" HorizontalAlignment="Right"/>
                                            </Button>

                                            <local:DownloadPopupList  Grid.Row="1" Margin="10,0,10,10" 
                                                                     ItemsSource="{Binding Downloads}"
                                                                     DownloadCommand="{Binding DownloadCommand}"
                                                                     ShowFavColumn="{Binding UseFavorites}"/>
                                    </Grid>
                                    </Border> 
                                </Popup>

                                
                                <ListView  Grid.Row="5" Margin="10,0,10,10" ItemsSource="{Binding ListedDownloads}" x:Name="EpisodeFavorizedUploadsListView"  ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn Header="Links">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <ItemsControl ItemsSource="{Binding Links}">
                                                            <ItemsControl.ItemsPanel>
                                                                <ItemsPanelTemplate>
                                                                    <StackPanel Orientation="Horizontal" />
                                                                </ItemsPanelTemplate>
                                                            </ItemsControl.ItemsPanel>
                                                            <ItemsControl.ItemTemplate>
                                                                <DataTemplate>
                                                                    <Button Margin="4" Padding="4,0" 
                                                        Command="{Binding DataContext.DownloadCommand, ElementName=EpisodeTabControl_Episode}" ToolTip="{Binding Key}"
                                                        CommandParameter="{Binding Value}" >
                                                                        <ContentPresenter Content="{Binding Key,Converter={StaticResource StringToFaviconConverter}}" >
                                                                            <ContentPresenter.ContentTemplate>
                                                                                <DataTemplate>
                                                                                    <Image Source="{Binding Image}" Width="16" Height="16"/>
                                                                                </DataTemplate>
                                                                            </ContentPresenter.ContentTemplate>
                                                                        </ContentPresenter>
                                                                    </Button>
                                                                </DataTemplate>
                                                            </ItemsControl.ItemTemplate>
                                                        </ItemsControl>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="Format" DisplayMemberBinding="{Binding Upload.Format}" />
                                            <GridViewColumn Header="Uploader" DisplayMemberBinding="{Binding Upload.Uploader}" />
                                            <GridViewColumn Header="Size" DisplayMemberBinding="{Binding Upload.Size}">
                                                <GridViewColumn.Width>
                                                    <MultiBinding Converter="{StaticResource lastColumnMaximizerConverter}">
                                                        <Binding Path="ActualWidth" 
                     RelativeSource="{RelativeSource AncestorType=ListView}"/>
                                                        <Binding Path="View.Columns" 
                     RelativeSource="{RelativeSource AncestorType=ListView}"/>
                                                    </MultiBinding>
                                                </GridViewColumn.Width>
                                            </GridViewColumn>
                                        </GridView>
                                    </ListView.View>
                                </ListView>
                                <TextBlock Grid.Row="5" Margin="15,20,15,5" Text="No Favorized Uploads yet." x:Name="EpisodeFavorizedWarning1" Foreground="{DynamicResource DisabledMenuItemForeground}" FontWeight="Bold" FontSize="13" Visibility="{Binding ShowNoFavUploadsWarning}"/>
                                <TextBlock Grid.Row="5" Margin="15,20,15,5" Text="Check here^^"   x:Name="EpisodeFavorizedWarning2" HorizontalAlignment="Right" Foreground="{DynamicResource DisabledMenuItemForeground}" FontWeight="Bold" FontSize="13" Visibility="{Binding ShowNoFavUploadsWarning}"/> 
  
                            </Grid>

                        </TabItem>
                        <TabItem Header="Multi"  x:Name="EpisodeTabControl_Multi" DataContext="{x:Null}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <TextBlock FontSize="24" Margin="10,5" Text="{Binding InfoText}"/>
                                <StackPanel Grid.Row="1" Orientation="Horizontal">
                                    <TextBlock VerticalAlignment="Center" FontSize="12" Margin="12,0" Text="{Binding InfoText2}"/>
                                    <Button VerticalAlignment="Center" Content="Mark selected as ..." ContextMenuService.IsEnabled="False" Click="MarkContextMenuButtonClicked">
                                        <Button.ContextMenu>
                                            <ContextMenu Placement="RelativePoint" VerticalOffset="24" HorizontalOffset="0" DataContext="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                                <MenuItem Header ="Watched" Command="{Binding MarkSelectedAsWatchedCommand}" />
                                                <MenuItem Header ="Downloaded" Command="{Binding MarkSelectedAsDownloadedCommand}" />
                                                <MenuItem Header ="Unmarked" Command="{Binding UnmarkSelectedCommand}"/>
                                            </ContextMenu>
                                        </Button.ContextMenu>
                                    </Button>
                                </StackPanel>
                                <Separator Grid.Row="2" Margin="10,20"/>
                                <local:MultiDownloadSelectionGrid Grid.Row="3" Episodes="{Binding SelectedEpisodes}" Margin="10,0"/>
                            </Grid>
                        </TabItem>
                    </TabControl>

                </Border>
            </Grid>
        </TabItem>
        <TabItem Header="SettingsGrid" DataContext="{Binding Settings}">
            <Grid x:Name="SettingsGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal" Margin="10,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Button Width="40" VerticalAlignment="Center"
                        Click="SettingsClicked"
                        Height="40"
                        Style="{DynamicResource MetroCircleButtonStyle}">
                        <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="20" Height="20">
                            <Rectangle.OpacityMask>
                                <VisualBrush Visual="{StaticResource appbar_arrow_left}" Stretch="Uniform" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button>
                    <Label FontFamily="Segoe UI Symbol" FontSize="24" Foreground="{DynamicResource LabelTextBrush}" Content="Settings"
                       VerticalAlignment="Center" />
                </StackPanel>

                <StackPanel Margin="0,15,10,0" HorizontalAlignment="Right" Grid.Row="0" Orientation="Horizontal">
                    <Label VerticalAlignment="Center" Content="You might have to restart the program for the changes to take effect."/>
                    <Button Width="40" ToolTip="Restart Application" HorizontalAlignment="Center" VerticalAlignment="Center"
                        Height="40"
                        Style="{DynamicResource MetroCircleButtonStyle}" Click="restartButton_Click">
                        <Rectangle Fill="{DynamicResource LabelTextBrush}"  Width="17" Height="17">
                            <Rectangle.OpacityMask>
                                <VisualBrush Visual="{StaticResource appbar_debug_restart}" Stretch="Uniform" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button>
                </StackPanel>

                <TabControl Grid.Row="1" Margin="10,0,10,10">
                    <TabItem Header="Appearance">
                        <StackPanel>
                            <GroupBox Header="General">
                                <StackPanel>
                                    <Grid HorizontalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition MaxWidth="500" Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition MaxWidth="500" Width="*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Label Content="Theme:"/>
                                        <ComboBox Grid.Column="1"
                                          ItemsSource="{Binding Source={x:Static metro:ThemeManager.AppThemes}}"
                                          DisplayMemberPath="Name" SelectedValuePath="Name"
                                          SelectedValue="{Binding CurrentTheme, ElementName=Window}" />
                                        <Label Content="Accent:" Grid.Column="2"/>
                                        <ComboBox Grid.Column="3"
                                          ItemsSource="{Binding Source={x:Static metro:ThemeManager.Accents}}"
                                          DisplayMemberPath="Name" SelectedValuePath="Name"
                                          SelectedValue="{Binding CurrentAccent, ElementName=Window}" />
                                    </Grid>
                                    <CheckBox Content="Enable Images" IsChecked="{Binding EnableImages}" Margin="0,2" />
                                    <StackPanel Orientation="Horizontal" Margin="0,-1,0,0" >
                                        <CheckBox Content="Show Notifications" IsChecked="{Binding ShowNotifications}"/>
                                        <Label VerticalContentAlignment="Center" Content="Timeout for popup:" Margin="20,0,0,0"/>
                                        <ComboBox Width="100" ItemsSource="{Binding Source={x:Static local:MainWindow.DictNotifyTimeouts}}"
                                      DisplayMemberPath="Key" SelectedValuePath="Value"
                                      SelectedValue="{Binding NotificationTimeout}"/>
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>
                   
                            <GroupBox Header="Homescreen">
                                <StackPanel Orientation="Horizontal">
                                    <DataGrid x:Name="CategorySettingsDataGrid"  ItemsSource="{Binding CategorySettings}" AutoGenerateColumns="False" CanUserAddRows="False" SelectionMode="Single"  Width="600" CanUserSortColumns="False" CanUserReorderColumns="False">
                                        <DataGrid.Resources>
                                            <ObjectDataProvider x:Key="EnumDataProvider"  MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                                                <ObjectDataProvider.MethodParameters>
                                                    <x:Type TypeName="model:CategoryOrderingType"/>
                                                </ObjectDataProvider.MethodParameters>
                                            </ObjectDataProvider>
                                        </DataGrid.Resources>
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Category" IsReadOnly="True" Binding="{Binding Title}" />
                                            <DataGridTextColumn Header="Description" Binding="{Binding Description}" Width="*"/>
                                            <DataGridTemplateColumn Header="Inner Ordering">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding OrderingType, Converter={StaticResource EnumTextValueConverter}}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                                <DataGridTemplateColumn.CellEditingTemplate>
                                                    <DataTemplate>
                                                        <ComboBox ItemsSource="{Binding Source={StaticResource EnumDataProvider}}"
                                                                    SelectedItem="{Binding OrderingType}" >
                                                            <ComboBox.ItemTemplate>
                                                                <DataTemplate>
                                                                    <TextBlock Text="{Binding . ,Converter={StaticResource EnumTextValueConverter}}" />
                                                                </DataTemplate>
                                                            </ComboBox.ItemTemplate>
                                                        </ComboBox>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellEditingTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridCheckBoxColumn Header="Visible" Binding="{Binding Enabled}" />
                                        </DataGrid.Columns>
                                    </DataGrid>
                                    <StackPanel Margin="10,20,0,0">
                                        <Button Content="Move Up" x:Name="CategorySettingsButtonUp" Click="CategorySettingsButtonUp_OnClick" Margin="0,0,0,3"/>
                                        <Button Content="Move Down" x:Name="CategorySettingsButtonDown" Click="CategorySettingsButtonDown_OnClick"/>
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>
                            
                            <GroupBox Header="Show Details">
                                <StackPanel>
                                    <CheckBox Content="Sort Seasons Descending"  Margin="0,2" IsChecked="{Binding SortSeasonsDesc}" />
                                    <CheckBox Content="Sort Episodes Descending"  Margin="0,2" IsChecked="{Binding SortEpisodesDesc}" />
                                    <CheckBox Content="Mark 'German Subbed' Episodes as German"  Margin="0,2" IsChecked="{Binding MarkSubbedAsGerman}" />
                                    <CheckBox Content="Enable Favorizing of Uploads" IsChecked="{Binding UseFavorites}"   Margin="0,2" />
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                    </TabItem>
                    <TabItem Header="Filter">
                        <StackPanel>
                            <GroupBox Header="Default Filter for Shows">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="200" />
                                        <ColumnDefinition Width="400" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <Label Grid.Row="0" Grid.Column="0" Content="Regex Name:"/>
                                    <TextBox Grid.Row="0" Grid.Column="1" controls:TextBoxHelper.Watermark="e.g. .*-TVS$"
                                     controls:TextBoxHelper.ClearTextButton="True">
                                        <Binding Path="FilterName" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <utils:RegexValidationRule />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox>
                                    <Label Grid.Row="1" Grid.Column="0" Content="Regex Format:"/>
                                    <TextBox Grid.Row="1" Grid.Column="1" controls:TextBoxHelper.Watermark="e.g. (1080|720)(p|i)"
                                     controls:TextBoxHelper.ClearTextButton="True">
                                        <Binding Path="FilterFormat" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <utils:RegexValidationRule />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox>
                                    <Label Grid.Row="2" Grid.Column="0" Content="Regex Uploader:"/>
                                    <TextBox Grid.Row="2" Grid.Column="1" controls:TextBoxHelper.Watermark="Regex or leave Empty"
                                     controls:TextBoxHelper.ClearTextButton="True">
                                        <Binding Path="FilterUploader" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <utils:RegexValidationRule />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox>

                                    <Label  Grid.Row="3" Grid.Column="0" Content="Regex Size:"/>
                                    <TextBox Grid.Row="3" Grid.Column="1" controls:TextBoxHelper.Watermark="Regex or leave Empty"
                                     controls:TextBoxHelper.ClearTextButton="True">
                                        <Binding Path="FilterSize" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <utils:RegexValidationRule />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox>
                                    <Label Grid.Row="4" Grid.Column="0" Content="Regex Runtime:"/>
                                    <TextBox Grid.Row="4" Grid.Column="1" controls:TextBoxHelper.Watermark="Regex or leave Empty"
                                     controls:TextBoxHelper.ClearTextButton="True">
                                        <Binding Path="FilterRuntime" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <utils:RegexValidationRule />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox>
                                    <Label Grid.Row="5" Grid.Column="0" Content="Regex Hoster:"/>
                                    <TextBox Grid.Row="5" Grid.Column="1" controls:TextBoxHelper.Watermark="e.g. share-online|uploaded"
                                     controls:TextBoxHelper.ClearTextButton="True">
                                        <Binding Path="FilterHoster" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <utils:RegexValidationRule />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox>
                                    <Label Grid.Row="6" Grid.Column="0" Content="Language:"/>
                                    <ComboBox Grid.Row="6" Grid.Column="1" 
                                          ItemsSource="{Binding Source={x:Static model:UploadData.LanguagesValues}}"  
                                          SelectedItem="{Binding FilterLanguage}"/>
                                </Grid>
                            </GroupBox>
                        </StackPanel>
                    </TabItem>
                    <TabItem Header="Others">
                        <StackPanel>
                            <GroupBox Header="General">
                                <StackPanel>
                                    <CheckBox Content="Autostart at windows login" IsChecked="{Binding Autostart}" Margin="0,2" />
                                    <CheckBox Content="Only Minimize to Tray when closing" IsChecked="{Binding MinimizeToTray}" Margin="0,2" />
                                    <Grid Width="500" HorizontalAlignment="Left">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Label Content="Number of working Threads:"/>
                                        <Slider Minimum="1" Maximum="12" x:Name="threadSlider" Grid.Column="1" SmallChange="1"
        					        IsSnapToTickEnabled="True"
        					        Value="{Binding NumFetchThreads}" />
                                        <Label Content="{Binding Value, ElementName=threadSlider}" Grid.Column="2" />
                                    </Grid>
                                    <Grid Width="500" HorizontalAlignment="Left">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <Label Content="Update Shows Automatically:"/>
                                        <ComboBox Grid.Column="1" Grid.Row="0" ItemsSource="{Binding Source={x:Static local:MainWindow.DictUpdateTimes}}"
                                          DisplayMemberPath="Key" SelectedValuePath="Value"
                                          SelectedValue="{Binding UpdateTime}"/>

                                    </Grid>
                                    <!--<CheckBox Content="Don't send any personal data (your favorite tv shows) to stats server"
        				        IsChecked="{Binding NoPersonalData}" />-->
                                    <Button Click="StatsInfoButtonClicked" Margin="5,4" HorizontalAlignment="Left">Privacy Information</Button>
                                </StackPanel>
                            </GroupBox>
                            <GroupBox Header="Version">
                                <StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label>Current Version:</Label>
                                        <Label Content="{Binding ElementName=Window,Path=CurrentVersionString}" Margin="10,0"/>
                                        <Button Click="ChangeLogButtonClicked">Changelog / Updates</Button>
                                      </StackPanel>
                                    <CheckBox Content="Autocheck for Updates at start and every 30 minutes" IsChecked="{Binding CheckForUpdates}"/>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                    </TabItem>
                </TabControl>
            </Grid>
        </TabItem>
    </TabControl>
</controls:MetroWindow>